[{"title":"HTML5笔记","date":"2020-11-16T13:43:00.604Z","url":"/2020/11/16/HTML5%E7%AC%94%E8%AE%B0/","categories":[["undefined",""]],"content":"一、HTML5的基本元素1. &lt;meta&gt; 元素属性 charset: HTML编码方式 http-equiv: refresh: 设定几秒后重新读取页面，或重定向至另一个页面 2. &lt;pre&gt; 元素其内容与编辑html文件所看到的格式相同，即可以保留原始文件样式 3. &lt;section&gt; 元素用于在文件中标记某一区域，是html的区块级元素，这种层级元素内的标题会被降一级输出，如h1-&gt;h2 4. 引用 &lt;cite&gt;/&lt;q&gt;/&lt;blockquote&gt; 元素 &lt;cite&gt;: 内容以斜体方式显示，用于引用源标题 &lt;q&gt;: 内容前后自动加上引号，用于引用短篇文章或段落元素 &lt;blockquote&gt;: 内容有缩排效果，用于引用长篇文章5. 底纹 &lt;mark&gt; 元素内容会高亮显示6. 小型字 &lt;small&gt; 元素用于批注信息，如脚注，尾注等7. &lt;kbd&gt;/&lt;samp&gt;/&lt;var&gt;/&lt;code&gt; 元素 &lt;kbd&gt;: 用于显示键盘或语音输入的内容 &lt;samp&gt;: 用于显示计算机程序结果 &lt;var&gt;: 用于显示变量 &lt;code&gt;: 用于显示代码8. &lt;abbr&gt; 元素用于定义缩写9. &lt;dfn&gt; 元素用于定义用语，结果以斜体输出8. &lt;sup&gt;/&lt;sub&gt; 元素 &lt;sup&gt;: 上标元素 &lt;sub&gt;: 下标元素9. 常用特殊元素 描述 实体名称 编码 空格 &amp;nbsp; &amp;#160; 小于 &amp;lt; &amp;#60; 大于 &amp;gt; &amp;#62; 引号 &amp;quot; &amp;#34; 和号 &amp;amp; &amp;#38; 10. &lt;a&gt; 元素属性 download: 指定下载链接 target: 规定在何处打开目标 URL。仅在 href 属性存在时使用。_blank：新窗口打开。_parent：在父窗口中打开链接。_self：默认，当前页面跳转。_top：在当前窗体打开链接，并替换当前的整个窗体(框架页)。 同一个html中的超链接： 书签： 返回顶部： 指定基准url： 使用&lt;base&gt;元素可指定url的基准，此后其他相对的url皆以此url为基准 &lt;base&gt;元素位于&lt;head&gt;元素内，且一个&lt;head&gt;元素只能有一个&lt;base&gt;元素 二、HTML5项目列表1. 无编号项目列表 &lt;ul&gt; 元素语法： 2. 有编号项目列表 &lt;ol&gt; 元素1 语法： 2 设置起始编号为n： 3 在一组连续编号中指定某一项为n： 4 更改项目编号种类（n可以取以下值）： a: 编号是：a,b,c,… A: 编号是：A,B,C,… i: 编号是：i,ii,iii,… I: 编号是：I,II,III,… 5 设置编号递减： 3. 自定义列表 &lt;dl&gt; 元素语法： 三、HTML5表格1. 表格基本元素 &lt;table&gt;: 表格本体标记 &lt;tr&gt;: 行 &lt;td&gt;: 单元格 &lt;th&gt;: 表头 &lt;tbody&gt;: 表格本体 &lt;tfoot&gt;: 表尾 &lt;caption&gt;: 标题2. &lt;td&gt; 属性 colspan: 合并横向单元格 rowspan: 合并纵向单元格 3. 单元格列群组化 &lt;colgroup&gt;/&lt;col&gt; 元素 colgroup: 用于将单元格群组化 col: colgroup的子元素，用于定义colgroup每一列的属性 四、HTML5图片1. &lt;img&gt; 元素&lt;img&gt; 标签定义 HTML 页面中的图像。 &lt;img&gt; 标签有两个必需的属性：src 和 alt。 注释：从技术上讲，图像并不会插入 HTML 页面中，而是链接到 HTML 页面上。&lt;img&gt; 标签的作用是为被引用的图像创建占位符。 提示：通过在 &lt;a&gt; 标签中嵌套 &lt;img&gt; 标签，给图像添加到另一个文档的链接。 2. 标示文件标题 &lt;figure&gt;/&lt;figcaption&gt; 元素用于标示图片标题 3. 响应图 &lt;map&gt; 元素 五、HTML5多媒体元素1. 视频 &lt;video&gt; 元素目前，&lt;video&gt; 元素支持三种视频格式：MP4、WebM、Ogg 属性 2. 音频 &lt;audio&gt; 元素目前，&lt;audio&gt; 元素支持的3种文件格式：MP3、Wav、Ogg 属性 3. 指定多个播放文件 &lt;source&gt; 元素&lt;source&gt; 标签为媒体元素（比如 &lt;video&gt; 和 &lt;audio&gt;）定义媒体资源。 &lt;source&gt; 标签允许您规定两个视频/音频文件共浏览器根据它对媒体类型或者编解码器的支持进行选择。 属性 4. 嵌入资源文件 &lt;embed&gt; 元素&lt;embed&gt; 标签定义了一个容器，用来嵌入外部应用或者互动程序（插件）。 注意：现在已经不建议使用 &lt;embed&gt; 标签了，可以使用 &lt;img&gt;、&lt;iframe&gt;、&lt;video&gt;、&lt;audio&gt; 等标签代替。 属性 5. 嵌入对象 &lt;object&gt; 元素&lt;object&gt; 标签用于包含对象，比如图像、音频、视频、Java applets、ActiveX、PDF 以及 Flash。 属性 6. 设定嵌入对象参数 &lt;param&gt; 元素&lt;param&gt;元素允许您为插入 XHTML 文档的对象规定 run-time 设置，也就是说，此标签可为包含它的 &lt;object&gt; 或者 &lt;applet&gt; 标签提供参数。 属性 7. 嵌入浮动框架 &lt;iframe&gt; 元素&lt;iframe&gt; 标签规定一个内联框架。 一个内联框架被用来在当前 HTML 文档中嵌入另一个文档。 提示： 1.可以把需要的文本放置在 &lt;iframe&gt; 和 &lt;/iframe&gt; 之间，这样就可以应对不支持 &lt;iframe&gt; 的浏览器。 2.可以使用 CSS 为 &lt;iframe&gt; （包括滚动条）定义样式。 属性 六、HTML5表单交互1. &lt;form&gt; 元素语法： 属性 2. &lt;input&gt; 元素输入字段可通过多种方式改变，取决于 type 属性。 属性 3. &lt;textarea&gt; 元素&lt;textarea&gt; 标签定义一个多行的文本输入控件。 文本区域中可容纳无限数量的文本，其中的文本的默认字体是等宽字体（通常是 Courier）。 可以通过 cols 和 rows 属性来规定 textarea 的尺寸大小，不过更好的办法是使用 CSS 的 height 和 width 属性。 属性 4. 关联标记 &lt;label&gt; 元素label 元素不会向用户呈现任何特殊效果。不过，它为鼠标用户改进了可用性。如果您在 label 元素内点击文本，就会触发此控件。即当用户选择该标签时，浏览器就会自动将焦点转到和标签相关的表单控件上。 &lt;label&gt; 标签的 for 属性应当与相关元素的 id 属性相同。 语法： 属性 5. 进度条 &lt;progress&gt; 元素&lt;progress&gt; 标签定义运行中的任务进度（进程） 属性 6. 仪表值 &lt;meter&gt; 元素&lt;meter&gt; 标签定义度量衡。仅用于已知最大和最小值的度量。 比如：磁盘使用情况，查询结果的相关性等。 属性 7. 下拉框 &lt;select&gt;/&lt;option&gt;/&lt;optgroup&gt; 元素&lt;select&gt; 元素用来创建下拉列表。 &lt;select&gt; 元素中的 &lt;option&gt; 标签定义了列表中的可用选项。 &lt;select&gt; 属性&lt;option&gt; 属性&lt;optgroup&gt; 标签经常用于把相关的选项组合在一起。 如果你有很多的选项组合, 你可以使用&lt;optgroup&gt; 标签能够很简单的将相关选项组合在一起。 &lt;optgroup&gt; 属性 8. 文本框候补选项 &lt;datalist&gt;/&lt;option&gt; 元素&lt;datalist&gt; 标签规定了 &lt;input&gt; 元素可能的选项列表。 &lt;datalist&gt; 标签被用来在为 &lt;input&gt; 元素提供”自动完成”的特性。用户能看到一个下拉列表，里边的选项是预先定义好的，将作为用户的输入数据。 请使用 &lt;input&gt; 元素的 list 属性来绑定 &lt;datalist&gt; 元素。 属性 id: 其内容应该和input元素的list属性值相同，以此建立关联。 9. 表单组件群组化 &lt;fieldset&gt;/&lt;legend&gt; 元素&lt;fieldset&gt; 标签可以将表单内的相关元素分组。 &lt;fieldset&gt; 标签会在相关表单元素周围绘制边框。 &lt;legend&gt; 元素为 &lt;fieldset&gt;元素定义标题。 属性 10. 加密密钥 &lt;keygen&gt; 元素&lt;keygen&gt; 标签规定用于表单的密钥对生成器字段。 当提交表单时，私钥存储在本地，公钥发送到服务器。 属性 七、HTML5功能总结1. 全局属性 2. 事件属性 3. &lt;script&gt; 元素&lt;script&gt; 标签用于定义客户端脚本，比如 JavaScript。 &lt;script&gt; 元素既可包含脚本语句，也可以通过 “src” 属性指向外部脚本文件。 JavaScript 通常用于图像操作、表单验证以及动态内容更改。 4. 一般区块&lt;div&gt; 元素&lt;div&gt; 标签定义 HTML 文档中的一个分隔区块或者一个区域部分。 &lt;div&gt; 标签常用于组合块级元素，以便通过 CSS 来对这些元素进行格式化。 5. 一般范围&lt;span&gt; 元素&lt;span&gt; 用于对文档中的行内元素进行组合。 &lt;span&gt; 标签没有固定的格式表现。当对它应用样式时，它才会产生视觉上的变化。如果不对 &lt;span&gt; 应用样式，那么 &lt;span&gt; 元素中的文本与其他文本不会任何视觉上的差异。 &lt;span&gt; 标签提供了一种将文本的一部分或者文档的一部分独立出来的方式。 6. 区块层级与行内层级 **区块层级(block)**：在新的一行放置，常见元素：&lt;div&gt; &lt;hn&gt; &lt;p&gt; &lt;pre&gt; **行内层级(inline)**：在同一行放置，常见元素：&lt;a&gt; &lt;img&gt; &lt;span&gt;7. 网页布局实例： "},{"title":"CSS3笔记(4)——鼠标指针形状+响应式网页设计","date":"2020-11-16T13:43:00.603Z","url":"/2020/11/16/CSS3%E7%AC%94%E8%AE%B0(4)%E2%80%94%E2%80%94%E9%BC%A0%E6%A0%87%E6%8C%87%E9%92%88%E5%BD%A2%E7%8A%B6+%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/","categories":[["undefined",""]],"content":"一、设置鼠标指针形状使用 cursor 属性可以更改鼠标指针样式。 语法 二、媒体查询1. 媒体类型下列是CSS中定义的媒体类型(media types). all 用于所有的媒体设备。 aural 用于语音和音频合成器。 braille 用于盲人用点字法触觉回馈设备。 embossed 用于分页的盲人用点字法打印机。 handheld 用于小的手持的设备。 print 用于打印机。 projection 用于方案展示，比如幻灯片。 screen 用于电脑显示器。 tty 用于使用固定密度字母栅格的媒体，比如电传打字机和终端。 tv 用于电视机类型的设备。 CSS3 的多媒体查询继承了 CSS2 多媒体类型的所有思想： 取代了查找设备的类型，CSS3 根据设置自适应显示。 媒体查询可用于检测很多事情，例如： viewport(视窗) 的宽度与高度 设备的宽度与高度 朝向 (智能手机横屏，竖屏) 。 分辨率 目前很多针对苹果手机，Android 手机，平板等设备都会使用到多媒体查询。 2. 媒体特性下列是CSS中定义的媒体特性(media fatures). color: 输出设备(屏幕)每个色彩的位数(bits)。 color index: 输出设备(屏幕)可以输出的色彩数量。 height: 浏览器窗口的高度。 deic-height: 建议弃用，输出设备(屏幕)的高度。 widh: 浏览器窗口的宽度。 devicc-width: 建议弃用，输出设备(屏幕)的宽度。 aspect-ratio: 浏览器窗口宽度和高度的比。 deie-spet-rationo: 建议弃用，输出设备(屏幕)宽度和高度的比。 monochrome: 国白屏幕每个色彩的位数。 resoluion: 输出设备(屏幕)的屏都分辨事，单位是dpi或dpcm。 上述所有属性皆可以加上前级词“min-“”或“max-“表示“最小值”或“最大值”，例如“min-widh”表示浏览器窗口的最小宽度。 orientation: 输出设备(屏幕)的方向，可能值是landscape (水平)或portait (垂直)。 scan: 输出设备(屏幕)的扫描方式，可能值是interlace (交错式)或progressive (循序式)。 grid: 输出设备(屏幕)的扫描方式，可能值是1 (网格grid)或0 (点阵bimap)。3. 媒体查询 @media语法多媒体查询由多种媒体组成，可以包含一个或多个表达式，表达式根据条件是否成立返回 true 或 false。 4. 媒体查询时使用 &lt;link&gt;针对不同的媒体使用不同 stylesheets : 三、响应式（RWD）网页设计1. 设计响应式网页的基本原则对于响应式网页而言，主要要掌握的原则如下： 使用HTML设计网页内容。 为手机倒览屏事设计CSS样式表，让网页可在手机屏幕完美呈现。 为平板电脑浏览屏幕设计CSS样式表，让网页可在平板屏幕完美呈现。 为PC屏幕设计CSS样式表，让网页可在PC屏幕完美呈现。 2.viewportviewport 指的是屏事分辨率，会因为所使用的设备而有不同的值。 在设计响应式网页时，必须在 &lt;meta&gt; 元素内进行下列设定。 &lt;meta&gt; 的值viewport将告诉浏览器如何控制页面尺寸和比例。 width=device-width, 可以获得浏览设备的宽度分辨率(pixel)。 initial-scale=1.0, 可以设定在网页插入图案时的初始缩放比例。 设计响应式网页有下列原则: 由于浏览屏幕宽度是不固定的， 所以不要采用固定宽度，应采用百分比来设置宽度。5图像宽度不要大于浏览屏幕宽度，以免需水平滚动来浏览网页。 由于每一种设备的分辨率不同，设计网页时不能只考虑种屏幕宽度。 使用绝对值定位要特别小心， 特别是大尺寸的绝对值，若不小心，就会落到浏览显示区外。 "},{"title":"CSS3笔记(3)——过渡效果+动画+变形","date":"2020-11-16T13:43:00.599Z","url":"/2020/11/16/CSS3%E7%AC%94%E8%AE%B0(3)%E2%80%94%E2%80%94%E8%BF%87%E6%B8%A1%E6%95%88%E6%9E%9C+%E5%8A%A8%E7%94%BB+%E5%8F%98%E5%BD%A2/","categories":[["undefined",""]],"content":"一、过渡效果1. 过渡时间 transition-duration 属性语法 time: 规定完成过渡效果需要花费的时间（以秒或毫秒计）。 默认值是 0，意味着不会有效果。2. 过渡效果 transition-property 属性语法 none: 没有属性会获得过渡效果。 all: 所有属性都将获得过渡效果。 property: 定义应用过渡效果的 CSS 属性名称列表，列表以逗号分隔。3. 过渡延迟时间 transition-delay 属性语法 time: 指定秒或毫秒数之前要等待切换效果开始。4. 过渡速度 transition-timing-function 属性语法 linear: 规定以相同速度开始至结束的过渡效果（等于 cubic-bezier(0,0,1,1)）。 ease : 规定慢速开始，然后变快，然后慢速结束的过渡效果（cubic-bezier(0.25,0.1,0.25,1)）。 ease-in: 规定以慢速开始的过渡效果（等于 cubic-bezier(0.42,0,1,1)）。 ease-out: 规定以慢速结束的过渡效果（等于 cubic-bezier(0,0,0.58,1)）。 ease-in-out: 规定以慢速开始和结束的过渡效果（等于 cubic-bezier(0.42,0,0.58,1)）。 cubic-bezier(n,n,n,n): 在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值。5. 简易表示法 transition 属性语法 二、动画1. 关键帧 @keyframes语法 2. 运用关键帧 animation-name 属性语法 3. 动画时间 animation-duration 属性语法 4. 变速方式 animation-timing-function 属性语法 5. 动画次数 animation-iteration-count 属性语法 6. 重复执行的方向 animation-direction 属性animation-direction 属性定义是否循环交替反向播放动画。 语法 7. 动画暂停/继续 animation-play-state 属性语法 8. 延迟时间 animation-delay 属性语法 9. 延迟与完成样式 animation-fill-mode 属性animation-fill-mode 属性规定当动画不播放时（当动画完成时，或当动画有一个延迟未开始播放时），要应用到元素的样式。 默认情况下，CSS 动画在第一个关键帧播放完之前不会影响元素，在最后一个关键帧完成后停止影响元素。 语法 10. 简易表示法 animation 属性语法 三、变形1. 变形 transform 属性transform 属性应用于元素的2D或3D变形。这个属性允许将元素旋转，缩放，移动，倾斜等。 2D变形可分为下列几种： 移动：translate()、translateX()、translateY() 缩放：scale()、scaleX()、scaleY() 旋转：rotate() 倾斜：skew()、skewX()、skewY() 矩阵：matrix() 3D变形可分为下列几种： 移动：translate3d()、translateZ() 缩放：scale3d()、scaleZ() 旋转：rotate3d()、rotateX()、rotateY()、rotateZ() 透视：perspective() 矩阵：matrix3d() 语法 2. 变形基准点 transform-origin 属性transform-origin 属性可以设定变形时的基准点。默认基准点在元素中心，即对于2D，默认为(50%，50%)，对于3D，默认为(50%，50%，50%)。 语法 3. 视点距离 perspective 属性perspective 属性用于设置视点距离，其与 perspective() 函数的区别： perspective()函数: 设置元素自身的视点距离 perspective属性: 设置子元素的视点距离 语法 4. 透视基准点 perspective-origin 属性perspective-origin 属性可以设定透视基准点。默认基准点在元素中心，即为(50%，50%)。语法 5. 嵌套元素显示方式 transform-style 属性transform-style 属性指定嵌套元素是怎样在三维空间中呈现。 语法 6. 背面显示 backface-visibility 属性backface-visibility 属性定义当元素背面向屏幕时是否可见。 语法 "},{"title":"CSS3笔记(2)——盒子模型+多栏+定位+弹性容器","date":"2020-11-16T13:43:00.597Z","url":"/2020/11/16/CSS3%E7%AC%94%E8%AE%B0(2)%E2%80%94%E2%80%94%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B+%E5%A4%9A%E6%A0%8F+%E5%AE%9A%E4%BD%8D+%E5%BC%B9%E6%80%A7%E5%AE%B9%E5%99%A8/","categories":[["undefined",""]],"content":"一、盒子模型1. 构成盒子模型由内容盒、内边距、边框和外边距构成 2. 外边距（margin）使用方法： 1.单边外边距属性 2.简写属性 注意： &lt;body&gt; 元素的 margin 属性值默认为8px 当垂直排列的两个元素外边距相遇时，浏览器会自动合并成二者中的较大值，但行内(inline)元素框、浮动框与绝对地址框不会合并3. 内边距（padding）使用方法与外边距相似4. 边框（border）（1）边框样式 border-style 属性 （2）边框颜色 border-color 属性border-color属性用于设置边框的颜色。可以设置的颜色： name - 指定颜色的名称，如 “red” RGB - 指定 RGB 值, 如 “rgb(255,0,0)” Hex - 指定16进制值, 如 “#ff0000” 还可以设置边框的颜色为”transparent”。 注意： border-color单独使用是不起作用的，必须得先使用border-style来设置边框样式。 （3）边框宽度 border-width 属性为边框指定宽度有两种方法：可以指定长度值，比如 2px 或 0.1em(单位为 px, pt, cm, em 等)，或者使用 3 个关键字之一，它们分别是 thick 、medium（默认值） 和 thin。 注意：CSS 没有定义 3 个关键字的具体宽度，所以一个用户可能把 thick 、medium 和 thin 分别设置为等于 5px、3px 和 2px，而另一个用户则分别设置为 3px、2px 和 1px。 （4）简易表示法 border 属性语法 （5）边框圆角 border-radius 属性语法 注意: 每个半径的四个值的顺序是：左上角，右上角，右下角，左下角。 如果省略左下角，右上角是相同的。如果省略右下角，左上角是相同的。如果省略右上角，左上角是相同的。 （6）图样边框 border-image 属性语法 5. 盒子阴影 box-shadow 属性语法 6. 盒子大小 box-sizing 属性规定容器元素的最终尺寸计算方式 语法 补充： 如果创造了一个 &lt;div&gt; 没有设置 box-sizing 属性为 border-box(不设置的话默认值为 content-box.)，同时你设置 width:100px; border:10px solid red; padding:10px; 那么最终 div 容器的实际宽度为：*100px(width)+210px*(padding)+2*10px(border)=140px，所以你会得到一个比你预期（100px）还要更大的容器，结果就是会破坏网页布局。（注意**：容易 margin 的尺寸不会被计算入最终容器宽度，因为对他的定义为对这个容器的留白，但不属于容器本身。） 如果当我们定义一个容器的 box-sizing 属性为 border-box 时（表达式：br{box-sizing:border-box}），那么我们创建一个和上段中相同设置的 &lt;div&gt; 容器时，那么他的最终宽度即为 100px, 那么它的内容部分（content）的有效宽度变成了 100px-210px-210px =60px; 所以你会得到一个你预期大小的盒子容器，但是只是被压缩了内容部分尺寸而已，但是对于整体布局而言益处颇多。 总结： W3C标准盒模型（content-box），border、padding 的设置会破坏元素宽高，必须得重新计算，非常麻烦（除了在IE浏览器，默认就是标准盒模型，所以可以用 box-sizing 来转换）； IE（怪异）盒模型（border-box），border、padding 的设置不会影响元素的宽高，这非常实用（且因为IE盒模型不是标准，所以才有 box-sizing 这个标准属性来设置，将它标准化）【IE6/5 是怪异模型，IE7开始是标准盒模型】 7. 内容溢出处理语法 8. outline 属性outline（轮廓）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。语法 outline-offset：设置轮廓框架在 border 边缘外的偏移值9. 可调整大小 resize 属性语法 二、多栏布局1. 栏数量和宽度 columns 属性（1）栏数量 column-count 属性语法 auto: 默认值（单栏），但是会根据 colunm-width 属性值自动调整 number: 栏的数量（2）栏宽度 column-width 属性语法 auto: 默认值（单栏），但是会根据 colunm-count 属性值自动调整 number: 指定栏的最佳宽度，并非绝对宽度，浏览器会根据窗口宽度调整 （3）简易表示法 columns 属性语法 2. 栏间距 column-gap 属性语法 normal: 默认值，W3C建议为1em number: 指定栏间距值3. 栏线 column-rule 属性（1）栏线类型 column-rule-style 属性语法 （2）栏线颜色 column-rule-color 属性语法 color: 颜色值（3）栏线颜色 column-rule-width 属性语法 （4）简易表示法 column-rule 属性语法 4. 跨栏显示 column-span 属性语法 none: 默认值，不跨栏显示 all: 跨栏显示5. 栏填充方式 column-fill 属性语法 balance: 默认值，将内容平均分割 auto: 填满一栏后再填充下一栏6. 换栏和换页（1）在之前换栏/页 break-before 属性语法 auto: 默认值，由浏览器自动调整 always: 特定位置处换栏/页 avoid: 特定位置处不换栏/页 left: 换页，下一页在左页 right: 换页，下一页在右页 page: 特定位置处换页 column: 特定位置处换栏 avoid-page: 特定位置处不换页 avoid-column: 特定位置处不换栏（2）在之后换栏/页 break-after 属性语法 属性同上（3）在元素中换栏/页 break-inside 属性语法 auto: 默认值，由浏览器自动调整 avoid: 特定元素内不换栏/页三、定位与网页排版1. 区块层级与行内层级 **区块层级(block)**：在新的一行放置，常见元素：&lt;div&gt; &lt;hn&gt; &lt;p&gt; &lt;pre&gt; **行内层级(inline)**：在同一行放置，常见元素：&lt;a&gt; &lt;img&gt; &lt;span&gt;2. 盒子大小极限语法 3. display 属性语法 4. position 属性语法 absolute: 相对于浏览器窗口左上角，窗口卷动时元素随之卷动 fixed: 相对于浏览器窗口左上角，窗口卷动时元素不随之卷动 relative: 相对于正常位置定位 static: 以正常顺序（即HTML文件代码顺序）排序，对于区块盒子，沿竖直方向由上往下显示；对于内层级，沿水平方向从左至右显示 sticky: 粘性定位的元素是依赖于用户的滚动，在 position: relative 与 position: fixed 定位之间切换（注意：元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。这个特定阈值指的是 top, right, bottom 或 left 之一，换言之，指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同。）5. float 属性float 属性指定一个盒子（元素）是否应该浮动 注意： 绝对定位的元素忽略float属性 语法 6. clear 属性clear 属性指定段落的左侧或右侧不允许浮动的元素 语法 7. 叠放次序 z-index 属性拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面 语法 8. 显示或隐藏 visibility 属性语法 9. object-fit 属性object-fit 属性指定元素的内容应该如何去适应指定容器的高度与宽度 object-fit 一般用于 img 和 video 标签，一般可以对这些元素进行保留原始比例的剪切、缩放或者直接进行拉伸等 语法 10. 垂直对齐 vertical-align 属性语法 vertical-align 属性设置一个元素的垂直对齐方式。 该属性定义行内元素的基线相对于该元素所在行的基线的垂直对齐。允许指定负长度值和百分比值。这会使元素降低而不是升高。在表单元格中，这个属性会设置单元格框中的单元格内容的对齐方式。 四、弹性容器1. 弹性容器声明弹性盒子由弹性容器(Flex container)和弹性子元素(Flex item)组成。 弹性容器通过设置 display 属性的值为 flex 或 inline-flex将其定义为弹性容器。 弹性容器内包含了一个或多个弹性子元素。 语法 flex: 将此元素声明为区块(block)层级的弹性容器 inline-flex: 将此元素声明为行内(inline)层级的弹性容器2. 版面方向 flex-direction 属性语法 row：横向从左到右排列（左对齐），默认的排列方式 row-reverse：反转横向排列（右对齐，从后往前排，最后一项排在最前面 column：纵向排列 column-reverse：反转纵向排列，从后往前排，最后一项排在最上面3. 多行排列 flex-wrap 属性语法 nowrap: 默认， 弹性容器为单行。该情况下弹性子项可能会溢出容器 wrap: 弹性容器为多行。该情况下弹性子项溢出的部分会被放置到新行，子项内部会发生断行 wrap-reverse: 反转 wrap 排列4. 方向和行数简易表示法 flex-flow 属性这是 flex-direction 和 flex-wrap 属性的简易表示法： 语法 5. 排列顺序 order 属性默认排序按照元素在代码中出现的顺序排列，当元素设置order属性值后，排列时order较小者在前 语法 number: 默认值为0，可为正整数6. 增加区块对象宽度 flex-grow 属性用于设置或检索弹性盒子元素的放大比例 语法 number: 默认值为0，是相对于其他版面区块元素的放大比例7. 缩减区块对象宽度 flex-shrink 属性用于设置或检索弹性盒子元素的缩小比例 语法 number: 默认值为0，是相对于其他版面区块元素的缩小比例8. 调整前区块宽度 flex-basis 属性用于设置或检索弹性盒伸缩基准值，即设定浮动元素的宽度 语法 number: 按长度设定宽度 auto: 默认值，根据内容设定宽度9. 增减区块宽度简易表示法 flex 属性这是 flex-grow 、flex-shrink 和 flex-basis 属性的简易表示法： 语法 auto: 相当于 flex-grow: 1 flex-shrink: 1 flex-basis: auto 10. 横向对齐 justify-content 属性设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式 语法 11. 行内纵向对齐 align-items 属性设置或检索弹性盒子元素在flex容器的当前行的侧轴（纵轴）方向上的对齐方式 语法 12. 重写 align-self 属性align-self 属性定义flex子项单独在侧轴（纵轴）方向上的对齐方式。align-self 属性可重写该容器的 align-items 属性。 语法 13. 纵向对齐 align-content 属性在弹性容器内的各项没有占用交叉轴上所有可用的空间时对齐容器内的各项（垂直）。 语法 "},{"title":"CSS3笔记(1)——基础+段落文字+项目列表+背景+表格+渐变","date":"2020-11-16T13:43:00.595Z","url":"/2020/11/16/CSS3%E7%AC%94%E8%AE%B0(1)%E2%80%94%E2%80%94%E5%9F%BA%E7%A1%80+%E6%AE%B5%E8%90%BD%E6%96%87%E5%AD%97+%E9%A1%B9%E7%9B%AE%E5%88%97%E8%A1%A8+%E8%83%8C%E6%99%AF+%E8%A1%A8%E6%A0%BC+%E6%B8%90%E5%8F%98/","categories":[["undefined",""]],"content":"一、CSS3基础1. CSS3基本语法 2. CSS引入方式 行内样式 内部样式表 外部样式表 3. 字体属性： font-family: 设置字体名称，可指定多个字体名称，用逗号隔开，在前面的字体名称优先级高 font-size: 设置字号大小 （1em = 16px） font-style: 设置三种字体样式：normal（正常）italic（斜体）oblique（倾斜体） font-variant: 默认值为normal，值为small-caps时小写英文字母以小型大写字母显示 font-weight: 设置字体粗细。有以下取值：normal(400)**、bold(700)、bolder、lighter、100, 200, … , 800, 900** font-size-adjust: 设置字体宽高比 font: 依序设定属性值：style variant weight size family（省略某一项则使用默认值） @font-face: 提供服务器端字体供浏览器下载4. 属性选择器用于将具有某种属性，不论其为何值的所有元素套用该样式。 语法 5. 虚拟选择器1.链接虚拟类别 :link 和 :visited :link: 尚未被单击时可以套用该样式 :visited: 已被单击时可以套用该样式 2.动作虚拟类别 :hover :active 和 :focus :hover: 鼠标指针位于超链接字符或在此元素上时可以套用该样式 :active: 单击时可以套用该样式 :focus: 获得焦点时可以套用该样式 3.目的虚拟类别 :target :target: 为移动的目标套用该样式二、段落文字编排1. 对齐方式 text-align 属性 left: 靠左对齐 right: 靠右对齐 center: 居中对齐 justify: 左右（两端）对齐 initial: 使用默认设置 inherit: 继承父元素属性2. 首行缩排 text-indent 属性 length: 使用cm、px、pt、em等单位设定固定长度，默认值为0 %: 缩排父元素宽度的百分比 initial: 使用默认设置 inherit: 继承父元素属性3. 行高 line-height 属性 normal: 默认值 number: 设置数值，将与当前字体尺寸相乘的结果作为行高值 length: 使用cm、px、pt等单位设定固定长度 %: 设置依照当前字体尺寸的百分比 inherit: 继承父元素属性4. 字符间距 letter-spacing 属性 normal: 默认值，没有额外空间 length: 设值固定的字符间距，可以为负值 initial: 使用默认设置 inherit: 继承父元素属性5. 文字间距 word-spacing 属性 normal: 默认值，文字间距为 0.25em（4px) length: 设值额外文字的间距，可以为负值 initial: 使用默认设置 inherit: 继承父元素属性6. 处理空格 white-space 属性 normal: 默认值，浏览器会忽略空白 nowrap: 文本不换行，直到遇到 &lt;br&gt; 元素 pre: 保留空白，类似于html的 &lt;pre&gt; 元素 pre-line: 合并空白符，使文件正常换行 pre-wrap: 设定保留空白符，在浏览器中可以正常换行 initial: 使用默认设置 inherit: 继承父元素属性7. 大小写转换 text-transform 属性 none: 默认值，保留文字原本样式 capitalize: 第一个字母大写 uppercase: 字母全部转成大写 lowercase: 字母全部转成小写 initial: 使用默认设置 inherit: 继承父元素属性 8. 文字阴影 text-shadow 属性 h-shadow: 水平阴影，右正左负，不可省略 v-shadow: 垂直阴影，下正上负，不可省略 blur-radius: 模糊范围，单位和h-shadow相同，可省略 color: 阴影颜色，可省略 none: 默认值，即无阴影 initial: 使用默认设置 inherit: 继承父元素属性9. 线条装饰 text-decoration 属性 none: 默认值，即正常显示 underline: 底线 overline: 顶线 line-through: 删除线 initial: 使用默认设置 inherit: 继承父元素属性 10. 制表符宽度 tab-size 属性 number: 设置宽度数值，默认值为8，即8个英文字符宽度 length: 设值制表符长度 initial: 使用默认设置 inherit: 继承父元素属性11. 换行 word-wrap 属性 normal: 默认值，只在可以换行的地方换行，否则显示到结束为止 break-word: 可用于将较长的单字或URL网址中途换行 12. 溢出 text-overflow 属性 clip: 超出显示区不予显示 ellipsis: 超出显示区以“…”显示 string: 使用给定的字符串替换被隐藏的文本 initial: 使用默认设置 inherit: 继承父元素属性 三、项目列表1. 项目列表符号 list-style-type 属性默认值： “disc” for &lt;ul&gt; and “decimal” for &lt;ol&gt; 2. 图片项目符号 list-style-image 属性list-style-image 属性使用图像来替换列表项的标记。 3. 项目符号与编号位置 list-style-position 属性 4. 简易表示法 list-style 属性 某个属性使用默认值时可省略 四、背景1. 背景颜色 background-color 属性 2. 背景图 background-image 属性 3. 背景重复出现 background-repeat 属性默认将图片以左上角为基准点放置 space: 设定图片在水平和垂直重复出现时自动调节间距，使图片完整出现 round: 设定图片在水平和垂直重复出现时自行重设大小，使图片完整出现 4. 背景位置 background-position 属性 5. 背景大小 background-size 属性 auto: 默认选项，以原图大小显示，空间不够时只显示局部 initial: 使用默认设置 6. 背景随内容滚动 background-attachment 属性 设置背景图像是否固定或者随着页面的其余部分滚动 local: 效果与scroll相同，但在inframe显示时，背景图不滚动7. 背景显示区域 background-clip 属性指定背景绘制区域。 8. 背景显示基准点 background-origin 属性盒子模型左上角为基准点，设定关于background-position属性的相对位置 9. 简易表示法 background 属性 各值之间用空格分隔，不分先后顺序，可以只有其中的某些值 五、表格1. 表格标题使用 caption 元素的 caption-side 属性指定表格标题的位置 2. 表格底色实例： 3. 表格框线实例： 4. 单元格框线使用 table 元素的border-collapse 属性指定单元格框线模式 在separate框线模式下，可以使用 table 元素的border-spacing 属性设定单元格与单元格间或单元格与表格间框线的距离 5. 单元格内边距实例： 6. 显示或隐藏空白单元格使用 table 元素的empty-cells 属性显示或隐藏空白单元格 7. 单元格内容排版可以使用 text-align 属性以不同方式对齐单元格内容 8. 表格版面排版使用 table 元素的table-layout 属性表格版面排版方式 9. 设置表格奇偶行不同的样式使用以下选择器： 则 奇数行：tr:nth-child(2n+1) 偶数行：tr:nth-child(2n)六、渐变1. 线性渐变 linear-gardient() direction: 设定色彩方向，可以用角度或英文表示 color-stop: 设定色彩驻停点，可以在颜色后指定位置，如 red 50%，所有百分比之和等于100% css 不均匀渐变百分比表示指定颜色的标准中心线位置，百分比之间是过渡色，如果百分比位置之间有重叠会失去渐变过渡色。比如： 其中： 10% 表示 red 的颜色中心线在线性渐变方向的 10% 的位置。 85% 表示 green 的颜色中心线在线性渐变方向的 85% 的位置。 90% 表示 blue 的颜色中心线在线性渐变方向的 90% 的位置。 10% 到 85% 是 red-green 的过渡色，85%-90% 是 green-blue 的过渡色。 2. 放射渐变 radial-gardient()默认情况下，渐变的中心是 center（表示在中心点），渐变的形状是 ellipse（表示椭圆形），渐变的大小是 farthest-corner（表示到最远的角落）。 shape: 设定色彩放射形状，如圆形(circle)、椭圆(ellipse) length: 设定渐变大小，可以通过数值或以下关键词设定渐变大小 closest-side | farthest-side | closest-corner | farthest-corner： position: 设定渐变中心，可以使用数值、％或以下关键词设定渐变中心 top | right | bottom | left3. 重复线性渐变 repeating-linear-gardient()通过设定其实色彩驻停点与结束色彩驻停点的长度来决定重复的次数。当长度为20%时，渐变重复5次。4. 重复放射渐变 repeating-radial-gardient()通过设定其实色彩驻停点与结束色彩驻停点的长度来决定重复的次数。当长度为20%时，渐变重复5次。 "}]