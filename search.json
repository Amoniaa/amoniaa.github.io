[{"title":"CSS三大特性/盒子模型/浮动/定位/高级技巧","date":"2021-03-04T13:25:40.000Z","url":"/2021/03/04/CSS%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7:%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B:%E6%B5%AE%E5%8A%A8:%E5%AE%9A%E4%BD%8D:%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7/","tags":[["前端","/tags/%E5%89%8D%E7%AB%AF/"],["CSS","/tags/CSS/"]],"categories":[["前端","/categories/%E5%89%8D%E7%AB%AF/"]],"content":"一、VS code 快捷键 shift + Alt + down: 向下复制一行 Alt + z: 切换换行显示方式 shift + Alt + F: 格式化代码 shift + Alt: 选中多行 ctrl + g: 快速定位到某一行二、Emmet 语法 ! + Tab .demo$*5 + Tab p{内容} + Tab 生成标签 直接输入标签名 按tab键即可 比如 div 然后tab 键， 就可以生成&lt;div&gt;&lt;/div&gt; 如果想要生成多个相同标签 加上 * 就可以了 比如 div*3 就可以快速生成3个div 如果有父子级关系的标签，可以用 &gt; 比如 ul &gt; li 就可以了 如果有兄弟关系的标签，用 + 就可以了 比如 div+p 如果生成带有类名或者id名字的， 直接写 .demo 或者 #two tab 键就可以了 如果生成的div 类名是有顺序的， 可以用 自增符号 $ 如果想要在生成的标签内部写内容可以用 { } 表示 CSS 基本采取简写形式即可. 比如 w200 按tab 可以 生成 width: 200px; 比如 lh26px 按tab 可以生成 line-height: 26px;三、Tips 图片居中对齐：给其父元素设置text-align: center; font-weight: 400 不加粗700 ```加粗 使用 font 属性时，必须按上面语法格式中的顺序书写，不能更换顺序，并且各个属性间以空格隔开 不需要设置的属性可以省略（取默认值），但必须保留 font-size 和 font-family 属性，否则 font 属性将不起作用 链接伪类选择器注意事项 为了确保生效，请按照 LVHA 的循顺序声明 :link－:visited－:hover－:active。 链接伪类选择器实际工作开发中的写法： 元素显示模式总结 元素显示模式转换 转换为块元素：display:block; 转换为行内元素：display:inline; 转换为行内块：display: inline-block; 背景图片位置background-position: x y;参数代表的意思是：x 坐标和 y 坐标。 可以使用 方位名词 或者 精确单位 参数是方位名词 如果指定的两个值都是方位名词，则两个值前后顺序无关，比如 left top 和 top left 效果一致 如果只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐 参数是精确单位 如果参数值是精确坐标，那么第一个肯定是 x 坐标，第二个一定是 y 坐标 如果只指定一个数值，那该数值一定是 x 坐标，另一个默认垂直居中 参数是混合单位 如果指定的两个值是精确单位和方位名词混合使用，则第一个值是 x 坐标，第二个值是 y 坐标 背景复合写法（更提倡）background: 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置;background: transparent url(image.jpg) repeat-y fixed top ; 背景色半透明background: rgba(0, 0, 0, 0.3);注意：背景半透明是指盒子背景半透明，盒子里面的内容不受影响CSS3 新增属性，是 IE9+ 版本浏览器才支持的 背景图片:实际开发常见于 logo 或者一些装饰性的小图片或者是超大的背景图片, 优点是非常便于控制位置. (精灵图也是一种运用场景) 背景图片缩放图片的高度; 六、浮动 网页布局第一准则：多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动。先用标准流的父元素排列上下位置, 之后内部子元素采取浮动排列左右位置 设置了浮动（float）的元素最重要特性： 脱离标准普通流的控制（浮） 移动到指定位置（动）, （俗称脱标）浮动的盒子不再保留原先的位置 如果多个盒子都设置了浮动，则它们会按照属性值一行内显示并且顶端对齐排列浮动的元素是互相贴靠在一起的（不会有缝隙），如果父级宽度装不下这些浮动的盒子， 多出的盒子会另起一行对齐 浮动元素会具有行内块元素特性。 如果块级盒子没有设置宽度，默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决定 浮动的盒子中间是没有缝隙的，是紧挨着一起的 行内元素同理 为了约束浮动元素位置, 我们网页布局一般采取的策略是:先用标准流的父元素排列上下位置, 之后内部子元素采取浮动排列左右位置. 符合网页布局第一准则. 网页布局第二准则：先设置盒子的大小, 之后设置盒子的位置。 一个元素浮动了，理论上其余的兄弟元素也要浮动。浮动的盒子只会影响浮动盒子后面的标准流，不会影响前面的标准流.七、清除浮动原因： 由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会影响下面的标准流盒子。 由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响本质 清除浮动的本质是清除浮动元素造成的影响 如果父盒子本身有高度，则不需要清除浮动 清除浮动之后，父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了八、清除浮动方法1. 额外标签法也称为隔墙法，是 W3C 推荐的做法：在最后一个浮动的子元素后面添加一个额外标签, 添加 清除浮动样式额外标签法会在浮动元素末尾添加一个空的标签。例如 &lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;，或者其他标签（如&lt;br /&gt;等）。 优点： 通俗易懂，书写方便 缺点： 添加许多无意义的标签，结构化较差 注意： 要求这个新的空标签必须是块级元素。2. 父级添加 overflow 属性可以给父级添加 overflow 属性，将其属性值设置为 hidden、 auto 或 scroll 。注意是给父元素添加代码 优点：代码简洁 缺点：无法显示溢出的部分3. 父级添加after伪元素:after 方式是额外标签法的升级版。也是给父元素添加 优点：没有增加标签，结构更简单 缺点：照顾低版本浏览器 代表网站： 百度、淘宝网、网易等4. 父级添加双伪元素给父元素添加 优点：代码更简洁 缺点：照顾低版本浏览器 代表网站：小米、腾讯等九、CSS 属性书写顺序(重点)建议遵循以下顺序： 布局定位属性：display / position / float / clear / visibility / overflow（建议 display 第一个写，毕竟关系到模式） 自身属性：width / height / margin / padding / border / background 文本属性：color / font / text-decoration / text-align / vertical-align / white- space / break-word 其他属性（CSS3）：content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient …为了提高网页制作的效率，布局时通常有以下的布局流程： 必须确定页面的版心（可视区），我们测量可得知。 分析页面中的行模块，以及每个行模块中的列模块。其实页面布局，就是一行行罗列而成的。 制作 HTML 结构。我们还是遵循，先有结构，后有样式的原则。结构永远最重要。 开始运用盒子模型的原理，通过 DIV+CSS 布局来控制网页的各个模块 实际开发中，导航栏通常采用li包含a的写法 十、定位 如果一个盒子既有left属性也有right属性，则默认会执行 left属性 同理 top bottom 会执行 top定位的拓展 加了绝对/固定定位的盒子不能通过 margin:0 auto水平居中，但是可以通过以下计算方法实现水平和垂直居中。①left: 50%;：让盒子的左侧移动到父级元素的水平中心位置。②margin-left: -100px;：让盒子向左移动自身宽度的一半。 让固定定位的盒子贴着版心右侧对齐①让固定定位的盒子 left: 50%.走到浏览器可视区（也可以看做版心） 的一半位置。②让固定定位的盒子 margin-left: 版心宽度的一半距离。 多走 版心宽度的一半位置 定位特殊特性绝对定位和固定定位也和浮动类似，具有行内块元素特性1.行内元素添加绝对或者固定定位，可以直接设置高度和宽度。2.块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小。 脱标的盒子不会触发外边距塌陷浮动元素、绝对定位(固定定位）元素的都不会触发外边距合并的问题。 绝对定位（固定定位）会完全压住盒子浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字（图片）但是绝对定位（固定定位） 会压住下面标准流所有的内容。浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果的。 文字会围绕浮动元素十一、元素的显示与隐藏display 属性用于设置一个元素应如何显示。 display: none ；隐藏对象 display：block ；除了转换为块级元素之外，同时还有显示元素的意思display 隐藏元素后，不再占有原来的位置。visibility 属性用于指定一个元素应可见还是隐藏。 visibility：visible ; 元素可视 visibility：hidden; 元素隐藏 visibility 隐藏元素后，继续占有原来的位置。 如果隐藏元素想要原来位置， 就用 visibility：hidden 如果隐藏元素不想要原来位置， 就用 display：none (用处更多 重点）十二、CSS 高级技巧1. 为什么需要精灵图为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度使用精灵图核心总结： 精灵图主要针对于小的背景图片使用。 主要借助于背景位置来实现—background-position 。 一般情况下精灵图都是负值。2. 字体图标 icomoon 字库  阿里 iconfont 字库 步骤： 把下载包里面的 fonts 文件夹放入页面根目录下 在 CSS 样式中全局声明字体： 简单理解把这些字体文件通过css引入到我们页面中 html 标签内添加小图标。复制小方块 给标签定义字体 字体图标的追加：把压缩包里面的 selection.json 从新上传，然后选中自己想要新的图标，从新下载压缩包，并替换原来的文件即可 3. CSS 用户界面样式 鼠标样式 cursor 轮廓线 outline：给表单添加 outline: 0; 或者 outline: none;样式之后，就可以去掉默认的蓝色边框。 防止拖拽文本域：resize：textarea&#123; resize: none;&#125;实际开发中，我们文本域右下角是不可以拖拽的。 4. vertical-align 属性应用语法： 图片、表单都属于行内块元素，默认的 vertical-align是基线对齐。图片底侧会有一个空白缝隙，原因是行内块元素会和文字的基线对齐。主要解决方法有两种： 给图片添加 vertical-align:middle | top| bottom 等。 （提倡使用的） 把图片转换为块级元素 display: block; 5. 溢出的文字省略号显示 单行文本溢出显示省略号–必须满足三个条件 多行文本溢出显示省略号 多行文本溢出显示省略号，有较大兼容性问题， 适合于webKit浏览器或移动端（移动端大部分是webkit内核） 京东初始化代码 十三、移动端补充 c3盒子模型，垂直居中注意此时高度包含边框，因此应为line-height=height-border*2 flex里面的子盒子可以写 % 相对于父级来说的 css3三角制作（边框旋转+伪元素） input元素去掉边框：border：0；去掉聚焦后的蓝色边框：outline：none html条件注释 ul清除样式： "},{"title":"操作系统课程复习","date":"2021-02-21T09:36:27.000Z","url":"/2021/02/21/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/","tags":[["操作系统","/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"]],"categories":[["期末复习","/categories/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"]],"content":"一、操作系统引论操作系统 定义： 一组能有效地组织和管理计算机硬件和软件资源、合理地对各类任务进行调度，以及方便用户使用的程序的集合 基本特征：并发，共享，虚拟，异步 功能：处理及管理，存储器管理，设备管理，文件管理，人机接口 多道程序系统：多个程序同时在内存中并发进行。由作业调度程序按一定的算法从后备队列选择若干作业调入内存，使其共享CPU和系统的各种资源 后备队列：用户所提交的程序先存放在外存上并排成一个队列，称为后备队列 系统吞吐量：指从作业进入系统（后备队列）开始所完成的总量 周转时间：指从作业进入系统开始，直至完成并退出系统为止所经历的时间 分时系统的特征：多路性，独立性，及时性（响应时间），交互性 实时系统的特征：实时性，可靠性 并发：多个事件在同一时间段内发生 并行：多个事件在同一时刻发生 微内核结构 应用场景：支持多处理机，适用于分布式系统环境 定义：精心设计的实现现代操作系统核心功能的小型内核，而并非一个完整的操作系统，仅为构建通用操作系统提供一个重要基础 服务方式：客户-服务器（C/S）模式 特征：以微内核为操作系统的核心，以C/S模式为基础，采用面向对象的程序设计方法 【各种操作系统提出的目的】 二、进程的描述与控制进程 定义：是进程实体的运行过程，是系统进行资源分配和调度的一个基本单位 引入目的：使多个程序能够并发执行，以提高资源利用率和系统吞吐量 属性：操作系统拥有资源和独立运行的基本单位 进程实体：程序（数据段 + 程序段）+ 进程控制块（PCB） PCB的作用：使多道系统中不能独立运行的程序，成为能够独立运行且能并发执行的进程。 特性：动态，并发，独立，异步 【进程和程序的区别与联系】 结构上进程实体除了程序段和数据段外，还包含进程控制块PCB 进程是程序的一次执行过程，具有动态，即由创建产生，调度执行，撤销消亡；程序具有静态性，是一组指令的有序结合 多个进程实体能够同时在内存中并发执行，而程序的并发执行具有不可再现性，因此程序无法正确地并发执行 进程是拥有资源和独立运行的基本单位，而程序无法在多道程序环境下独立运行 进程和程序不一一对应：同一程序的一次或多次运行形成不同的进程，而一个进程在生命周期的不同阶段可以执行不同程序 基本状态：就绪，执行，阻塞 相互转换 阻塞：进程调用阻塞原语block将自己阻塞 唤醒：有关进程调用唤醒原语wakeup将等待该事件的进程唤醒，自己无法唤醒 进程同步 主要任务：协调多个相关进程的执行次序，使并发执行的进程能按一定的规则或时许共享资源和相互合作，从而使程序的执行具有可再现性 临界资源：访问时进程间应采取互斥方式实现共享 临界区 定义：每个进程中访问临界资源的代码段 作用：保证各进程互斥地进入或执行自己的临界区，以实现对临界资源的互斥访问 同步机制遵循的规则：空闲让进，忙则等待，有限等待，让权等待 信号量机制 基本思想 使用信号量标记临界资源是否被利用 检查和释放信号量的任务由操作系统完成 应用程序中可调用相应的原语，以完成对信号量的检查和释放 应用：限制访问和协调进行 【根据前驱图写代码描述】 【进程同步问题】 司机和售票员 生产者-消费者 *哲学家进餐 读者-写者 无死锁的哲学家进餐 售票 单行车道 阅览室 缓冲队列 线程 引入目的：减少程序在并发执行时所付出的时空开销，使操作系统有更好的并发性 属性 轻型实体 独立调度的基本单位 可并发执行 共享进程的资源 可以创建或撤销另一个线程 *【 * 线程和进程的区别与联系】* 线程是调度和分派的基本单位，进程是拥有资源的基本单位 除必不可少的资源外，线程不拥有系统资源，但可以访问并获得其隶属进程的系统资源 支持多线程的操作系统中，不仅不同进程中的线程间可以并发，同一进程内的线程间也可以并发 进程具有独立性，独立地申请资源和运行，但同一进程内的多个线程共享进程的地址空间和其他资源，独立性较低 线程的系统开销很小，仅需要保存和设置少量信息，而进程切换时时空开销较大 线程和进程都支持多处理机系统 【内核级线程和用户级线程的区别】 内核级线程有内核支持，而用户级线程无内核支持 内核级线程调度一个应用程序中的多个线程同时在多个处理机上并行运行，从而提高执行速度和运行效率；而用户级线程一次只为一个进程分配一个处理器 内核级线程的调度单位是线程，CPU执行时间多，切换速度较慢 用户级线程的调度单位是进程，CPU执行时间少，切换速度较快 系统调用时内核级线程仅阻塞该线程，而用户级进程阻塞整个进程 三、处理机调度与死锁作业调度算法 先来先服务（FCFS）调度算法 短作业优先（SJF）调度算法 优先级（PSA）调度算法 高响应比优先（HRRN）调度算法 进程调度 调度方式 抢占式：实时系统 非抢占式：批处理系统 进程调度算法 先来先服务（FCFS）调度算法 短进程优先（SPF）调度算法 优先级（PSA）调度算法 高响应比优先（HRRN）调度算法 轮转（RR）调度算法 多队列调度算法 多级反馈队列调度算法 实时调度算法 最早截至时间优先（EDF）算法 最低松弛度优先（LLF）算法 死锁 起因：对不可抢占资源或可消耗资源的争夺 定义：若一组进行中的每一个进程都在等待仅有该组进程中的其他进程才能引发的事件，那么该组进程是死锁的 必要条件（需要同时满足） 互斥 请求和保持 不可抢占 循环等待 避免死锁 安全序列：系统能按照某顺序为某进程分配所需资源，直至满足每个进程对资源的最大需求，使每个进程都可以顺利完成 系统安全状态：能够找到一个安全序列，从而不会导致死锁的状态 实质：系统在进行资源分配时，如何避免系统进入不安全状态 【银行家算法】 【安全性算法】 死锁定理：当且仅当一个状态对应的资源分配图是不可简化的，此时为死锁状态 死锁的解除： 抢占资源（资源争夺法） 终止（撤销）进程 四、存储器管理单一连续分配（单道）：把内存分为系统区和用户区两部分 固定分区分配（多道） 基本思想：把用户区划分为若干大小固定的分区，每个分区只放一个进程，当一个分区空闲时，可以选择一个新进程进入该分区运行 划分分区的方法 分区大小相等 分区大小不等 动态分区分配（可变分区分配） 数据结构 可变分区表 可变分区链 分配算法 首次适应（FF）算法 循环首次适应（NF）算法 最佳适应（BF）算法 最坏适应（WF）算法 内存回收 与前一个空闲分区邻接：修改前一分区大小 与后一个空闲分区邻接：二者合并，新空闲分区大小为二者之和，回收区首址为新分区首址 与前后两个空闲分区邻接：三者合并，大小为三者之和，使用前一个分区表项和首址，取消后一个分区表项 不与前后两个空闲分区邻接：新空闲分区为回收区的表项和首址，插入到空闲分区链的适当位置 动态可重定位分区分配 分页存储管理 页面：进程的逻辑地址空间分成若干大小相等的页，大小由机器地址结构决定 物理块：把内存的存储空间划分为与页大小相等的块 注意 分页由系统完成 每一页的页内地址相对于0开始 调度时，必须一次性地把进程的所有页装入内存的物理块中 地址结构：页号+页内地址 页号和页内地址的划分由操作系统自动完成，对用户透明 【页内地址和偏移量相关计算】 地址变换机构：将逻辑地址重定位为物理地址 【快表原理】 CPU给出有效地址后，地址变换机构自动将页号送入快表 将此页号与快表中所有页号比较： 若有匹配页号=&gt;直接从快表中读出对应的物理块号=&gt;送入物理地址寄存器 若无匹配页号=&gt;访问内存中的页表=&gt;将对应块号送入物理地址寄存器，同时将此页表项加入快表寄存器单元 若快表已满=&gt;操作系统找到一个最早的且不再需要的页表项换出 分段存储管理 地址结构：段号+段内地址 注意 段和段之间可以不连续，但是每一段内的空间连续 每一段大小可以不相等 【分页和分段的主要区别】 页是信息的物理单位，分页由于系统管理的需要，为了消减内存碎片，提高内存利用率 段是信息的逻辑单位，分段为了更好地满足用户的需要，段含有一组其意义相对完整的信息 页的大小固定，由系统决定，系统把逻辑地址划分为页号和页内地址，是由机器硬件实现，系统中只能有一种大小的页面 段的长度不固定，取决于用户所编写的程序，其大小在编译时根据信息的性质划分 分页的作业地址空间是一维的，即单一的线性地址空间，只需记忆符表示一个地址 分段的作业地址空间是二维的，既需要给出段名。又需给出段内地址 五、虚拟存储器虚拟存储器 定义：具有请求调入功能和置换功能，能从逻辑上扩充内存容量的一种存储器系统 逻辑容量 = 内存容量 + 外存容量 最大容量：由计算机的地址结构决定 实现方法 请求分页存储管理方式 请求分段存储管理方式 段页式虚拟存储管理方式 请求分页存储管理方式 与基本分页系统的异同 硬件支持 请求页表机制 缺页中断机构 地址变换机构 【缺页中断与一般中断的区别】 缺页中断在指令执行期间产生和处理中断信号。通常，CPU只能在指令之间接受中断，而缺页中断在指令执行中间得到服务。即发现要访问的数据或指令不在内存时，立即产生缺页中断并进行处理 一条指令可能引起多次不同的页面中断，系统中的硬件机制能够保存多次中断时的状态 抖动（由于置换算法选择不当引起）：系统一直忙于页面的换入和换出，大部分CPU时间用于处理缺页中断和页面淘汰，很少顾及到用户进程的实际执行 页面置换算法 最佳置换算法（Optimal） 先进先出置换算法（FIFO） 最近最久未使用置换算法（LRU） Belady现象：分配的页面数增多但缺页率反而提高的异常现象（FIFO存在这种现象） 六、输入输出系统对I/O设备的控制方式 使用轮询的可编程I/O方式（程序控制方式）忙—等待方式，CPU和设备串行工作 使用中断的可编程I/O方式（中断驱动方式）CPU与IO设备并行工作，以字节为单位进行I/O 直接存储器访问方式（DMA方式） DMA与中断方式的区别 中断的时机不同 中断方式是在数据寄存器满后，发中断请求，CPU进行中断处理 DMA方式是在所要求传送的数据块全部传送结束时要求CPU进行中断处理，大大减少了CPU进行中断处理的次数 CPU控制方法不同 中断方式的数据传送是由CPU控制完成的 DMA方式是在DMA控制器的控制下不经CPU控制完成的 I/O通道控制方式 通道：通过执行通道程序并与设备控制器共同实现对I/O设备控制 瓶颈问题：通道价格昂贵，配备不可能太多，产生了I/O瓶颈 解决方法：增加设备到主机间的通路而不增加通道 设备分配算法 先来先服务 优先级高者优先 用户层的I/O软件 Spooling技术（假脱机系统） 目的：可以将一台物理设备虚拟为多台逻辑设备，以允许多个用户共享一台物理设备 实质：模拟脱机输入/输出 组成：必须建立在具有多道程序功能的OS上，有高速随机外存（通常为磁盘）的支持 输入井、输出井磁盘上的两块存储区，用于暂存输入、输出的数据 输入缓冲区、输出缓冲区位于内存中，作用是缓和CPU、设备之间的速度差异 输入进程、输出进程 输入进程：利用输入缓冲区为中介，把输入设备的数据存入输入井 输出进程：设备空闲时，将输出井中的数据利用输出缓冲区送入设备 井管理程序控制任务与井之间信息的交换 特征 提高了I/O速度 将独占设备改造为共享设备 实现了虚拟设备功能 【缓冲区引入的原因】 缓和CPU和I/O设备之间速度不匹配的矛盾 减少对CPU的中断频率，放宽对CPU中断响应时间的限制 解决生产者和消费者之间数据粒度（单元大小）不匹配的问题 提高CPU和I/O设备之间的并行性，提高系统的吞吐量和设备的利用率 缓冲区的类型 单缓冲区：每当用户进程发出一次I/O请求时，OS便在内存中为之分配一个缓冲区 双缓冲区：设备输入时，先将数据送入缓冲区1，装满后转向缓冲区2，此时OS可从缓冲区1中读取数据，并送入用户进程。 环形缓冲区：多个缓冲区，多个指针 作为输入的缓冲区可设置三个指针 Nexti: 指示输入进程下次可用空缓冲区R Nextg: 指示计算进程下一个可用缓冲区G Current: 指示计算进程正使用的缓冲区C 进程同步问题：使用输入循环缓冲，指针Nexti和指针Nextg将不断地沿着顺时针方向移动，这样就可能出现下述两种情况: Nexti指针追赶上Nextg指针 表示输入数据的速度大于处理数据的速度，已无空缓冲区可用。 此时，输入进程应阻塞，直到计算进程把某个缓冲区中的数据读取完，使之成为空缓冲区R，并调用Releasebuf过程将它释放时，才将输入进程唤醒。 这种情况被称为系统受计算限制 Nextg指针追赶上Nexti指针 表示输入数据的速度低于处理数据的速度，此时无装满数据的缓冲区供计算进程使用。 这时，计算进程只能阻塞，直至输入进程又装满某个缓冲区，并调用Releasebuf过程将它释放时，才去唤醒计算进程。 这种情况被称为系统受I/O限制 缓冲池 缓冲区都是专用缓冲，是为完成某个任务专门开辟的。 因此，任务较多时，开销会很大，而且利用率低。 可以设立公用缓冲池，池中设立多个缓冲区，为多个进程共享，以提高利用率。 缓冲区、缓冲池的区别 缓冲区：单个内存区域或一组内存区域组成的链表 缓冲池：包含一个管理的数据结构、一组操作函数的管理机制，用于管理多个缓冲区 磁盘存储器的管理 ​ 目前几乎所有的机械式硬盘都以“温彻斯特”技术为基本原理 磁盘的组织和格式 磁盘包括一或多个物理盘片。 每个盘片分一个或两个存储面。 每个面被组织成若干同心环，这种环称为磁道(track)，磁道之间留有间隙(gap)。为使处理简单，磁道上可存储的字节数目是相同的。 磁道又被逻辑上划分成若干扇区(sector) 。扇区之间保留一定的间隙。 一个扇区称为一个盘块(或数据块) 磁盘上存储的数据块数目是由扇区数、磁道数以及磁盘面数所决定的 （为充分利用磁盘外面磁道的存储能力，现代磁盘不再把内外磁道划分为相同数目的扇区，而是利用外层磁道容量较大的特点，将盘面划分成若干环带，同一环带内的所有磁道具有相同的扇区数。显然，外层环带的磁道拥有更多的扇区） 【磁盘调度算法】 先来先服务(FCFS) 最短寻道时间优先(SSTF)算法 扫描(SCAN)算法 循环扫描(CSCAN)算法 七、文件管理数据组 数据项 记录 文件 文件 定义：由创建者所定义的，具有文件名的一组相关元素的集合 分类 有结构文件（记录式文件）：数据结构、数据库 无结构文件（流式文件）：源程序、可执行文件、库函数 类型 按用途分类 系统文件 用户文件 库文件 按文件中数据的形式分类 源文件 目标文件 可执行文件 按存取控制属性分类 只执行文件 只读文件 读写文件 某些系统，如UNIX等，把I/O设备设为特殊文件 文件操作 ①创建文件 ②删除文件 ③读文件 ④写文件 ⑤截断文件 ⑥设置文件的读/写位置 ⑦文件的“打开”和“关闭”操作 索引文件 目的：使变长记录文件可以直接存取 存在的问题：存储量比较大，每个记录都要建索引 文件目录 定义：是一种数据结构，用于标识系统中的文件及其物理地址，供检索文件时使用 要求： 实现按名存取，只提供文件名，便可快速找到文件在外存上的位置 提高对目录的检索速度 文件共享 允许文件重名，允许不同用户对不同文件使用相同的文件名 文件目录形式 单级文件目录 含义：系统中仅一张目录表，每个文件一个目录项 优点：简单，能实现目录管理的基本功能—按名存取 缺点 查找速度慢：特别是大文件系统 不允许重名 不便于实现文件共享：不同用户不能用不同名字访问同一个文件，不灵活 两级文件目录 含义：为每个用户再建立一个单独的用户文件目录 (UFD) 优点 提高了检索目录的速度 不同用户目录中，可以使用相同的文件名 不同用户还可使用不同的文件名来访问系统中的同一个共享文件 "},{"title":"软件工程复习","date":"2021-02-21T09:35:34.000Z","url":"/2021/02/21/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/","tags":[["软件工程","/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"]],"categories":[["期末复习","/categories/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"]],"content":"第一章 软件工程学概述P1 软件危机的概念在计算机软件的开发和维护过程中所遇到的一系列严重问题 P9，软件工程方法学分为两种： 传统方法学 面向对象方法学 P16，瀑布模型 优点：强迫开发人员采用规范的方法（结构化技术），严格规定了每个阶段必须提交的文档，要求每个阶段交出的所有产品必须经过质量保证小组的仔细验证 缺点：瀑布模型是由文档驱动的这个事实也是它的一个主要缺点。 仅仅通过写在纸上的静态的规格说明，很难全面正确地认识动态的软件产品 几乎完全依赖于书面的规格说明，很可能导致最终开发出来的软件产品不能真正地满足用户的需要 P19，螺旋模型的基本思想：使用原型及其他方法来尽量降低风险，可以把它看成在每个阶段之前都增加了风险分析过程的快速原型模型 P25，敏捷过程开发宣言由4个简单的价值观声明组成【掌握】 个体和交互胜过过程和工具 可以工作的软件胜过面面俱到的文档 客户合作胜过合同谈判 响应变化胜过遵循计划 第二章 可行性研究P38，系统流程图概念：系统流程图是概括地描绘物理系统的传统工具。 它的基本思想是用图形符号以黑盒子形式描绘组成系统的每个部件（程序、文档、数据库、人工过程等）。 P40，数据流图（DFD)概念：数据流图是一种图形化技术，它描绘信息流和数据从输入移动到输出的过程中所经受的变换。 在数据流图中没有任何具体的物理部件，它只是描绘数据在软件中流动和被处理的逻辑过程。 数据流图的四种符号 正方形或立方体——数据的源点或终点 圆角矩形或圆形——变换数据的处理 开口矩形或两条平行横线——数据存储 箭头——数据流 P47，数据流图和数据字典共同构成系统的逻辑模型，没有数据字典，数据流图就不严格；没有数据流图，数据字典也难以发挥作用。P47，数据字典【描述一个系统/软件，会画数据字典/改编例子】第三章 需求分析P58，访谈是最早开始使用的获取用户需求的技术，也是迄今为止仍然广泛使用的需求分析技术。P62，需求分析阶段，首先要创建分析模型，还应该写出软件的需求规格说明书，它是需求分析阶段得出的最主要的文档。P64，实体-联系图（ER图）中包含实体（数据对象）、关系和属性3种基本成分。 矩形框——实体 菱形框——关系 椭圆形或圆角矩形——实体（或关系）的属性 直线——连接实体（或关系）与其属性 P70，从哪四个方面验证软件需求的正确性 一致性 完整性 现实性 有效性 第五章 总体设计P91，总体设计过程由2个主要阶段组成： 系统设计阶段——确定系统的具体实现方案 结构设计阶段——确定软件结构 P94，软件设计中应遵循的基本原理（5个） 模块化 抽象 逐步求精 信息隐藏和局部化 模块独立 P95，模块化的好处。【不需要背，但是大体能判断哪些是好处】采用模块化原理，可以 使软件结构清晰，容易设计、阅读和理解 使软件容易测试和调试，有助于提高软件可靠性 能够提高软件的可修改性 有助于软件开发工程的组织管理 P98，设计的原则是高内聚，低耦合。同时要知道，内聚的七种类型，耦合的四种。内聚、耦合的高低。模块的独立程度可由两个定性标准度量： 内聚 含义：标志着一个模块内各个元素彼此结合的紧密程度，是信息隐藏和局部化概念的自然扩展 分类： 低内聚：偶然内聚【最低】 &lt; 逻辑内聚 &lt; 时间内聚 中内聚：过程内聚 &lt; 通信内聚 高内聚：顺序内聚 &lt; 功能内聚【最高】 耦合 含义：是对一个软件结构内不同模块间互联程度的度量，其强度取决于模块间接口的复杂程度，进入或访问一个模块的点，以及通过接口的数据 分类： 数据耦合：两个模块彼此间通过参数交换信息，信息仅仅是数据【低耦合】 控制耦合：传递的信息中有控制信息【中等耦合】 特征耦合：整个数据结构作为参数传递，但被调用的模块只需要使用其中一部分数据元素 公共环境耦合：两个或多个模块通过一个公共数据环境作用 内容耦合：【耦合度最高】 P104，面向数据流的设计方法，七个步骤。【书中的例子要看懂，一定要掌握】【大题】 复查基本系统模型 复查并精化数据流图 确定数据流图具有变换特性还是事务特性 确定输入流和输出流的边界，从而孤立出变换中心 完成第一级分解 完成第二级分解 使用设计度量和启发式规则，对第一次分割得到的软件结构进一步精化 【见附录1】 第六章 详细设计P117，详细设计阶段的根本目标是确定怎样具体地实现所要求的系统，也就是说，经过这个阶段的工作，应该得出对目标系统的精确描述，从而在编码阶段可以把这个描述直接翻译成用某种程序设计语言写的程序。P117，1966年B和J证明了只用三种基本的控制结构就能实现任何单入口单出口的程序：顺序，选择和循环。P119，人机界面设计是接口设计的一个重要的组成部分。对于交互式系统来说，人机界面设计和数据设计、体系结构设计及过程设计一样重要。P124，程序流程图又称为程序框图，是历史最悠久，使用最广泛的描述过程设计的方法，然而也是使用最为混乱的一个方法。 优点：对控制流程地描绘很直观，便于初学者掌握 主要缺点： 程序流程图本质上不是逐步求精的好工具，它诱使程序员过早地考虑程序地控制流程，而不去考虑程序的全局结构 程序流程图中用箭头代表控制流，因此程序员不受任何约束，可以完全不顾结构程序设计的精神，随意转移控制 程序流程图不易表示数据结构 P125，由于要有一种不允许违背结构程序设计精神的图形工具的考虑，N和S提出了盒图，又叫做N-S图，严格遵循结构程序设计精神P137，程序复杂度的度量， McCabe方法，三种方法度量程序的环形复杂度。【见附录2】 第七章 实现P150，软件测试的目标：发现程序中的错误。从心理学角度看，由程序的编写者自己进行测试是不合适的。因此，在综合测试阶段经常由其他人员组成的测试小组来完成测试工作。P151，黑盒和白盒测试的基本概念。 黑盒测试法把程序看作一个黑盒子，完全不考虑程序的内部结构和处理过程。 白盒测试法把程序看成装在一个透明的白盒子里，测试者完全知道程序的结构和处理算法。 软件测试步骤 模块测试 子系统测试 系统测试 验收测试 平行运行 模块测试，把每个模块作为一个单独的实体来测试，目的是保证每个模块作为一个单元能正确运行，因此，模块测试又被称为单元测试。P153，单元测试从五个方面进行【注意区分哪个是最重要的】 模块接口 局部数据结构 重要的执行通路 出错处理通路 边界条件【最后的且可能是最重要的任务】 P157，自顶向下集成，需要存根模块。自顶向下集成方法是一个日益为人们广泛采用的测试和组装软件的途径。 从主控制开始，沿着程序的控制层次向下移动，逐渐地把各个模块结合起来。在把附属于（及最终附属于）主控制模块的那些模块组装到程序结构中时，或者使用深度优先的策略，或者使用宽度优先的策略。 P162，白盒测试中的逻辑覆盖【需要知道有哪几种，哪个最强，哪个最弱】 语句覆盖 判定覆盖 条件覆盖 判定/条件覆盖 条件组合覆盖 点覆盖 边覆盖 路径覆盖 强弱关系： 条件组合 &gt; 条件 &gt; 判定 &gt; 语句 判定/条件 不一定比 条件覆盖 强 点覆盖标准和语句覆盖标准相同 边覆盖和判定覆盖一致 第八章 维护P189，软件维护的基本定义。软件维护是指，在软件已经交付使用后，为了改正错误或满足新的需要而修改软件的过程 P194，决定软件可维护性的因素【背熟】 可理解性 可测试性 可修改性 可移植性 可重用性 第九章 面向对象方法学引论P208，面向对象方法学开发的软件可维护性好的因素【背熟】面向对象的软件： 稳定性比较好 比较容易修改 比较容易理解 易于测试和调试 P211，面向对象的基本概念：类，实例，消息，方法，属性，封装，继承，多态性，重载。对象：是具有相同状态的一组操作的集合 类：对具有相同数据和相同操作的一组相似对象的定义，是对具有相同属性和行为的一个或多个对象的描述 实例：由某个特定的类所描述的一个具体的对象 消息：要求某个对象执行在定义它的那个类中所定义的某个操作的规格说明 方法：方法是对象所执行的操作，也就是类中所定义的服务。方法描述了对象执行操作的算法，响应消息的方法。 属性：是类中所定义的数据，是对客观世界实体所具有的性质的抽象 封装：把数据和实现操作的代码集中起来放在对象内部 继承：继承是指子类自动地共享基类中定义的数据和方法的机制 多态性：接口的多种不同的实现方式即为多态，子类对象可以像父类对象那样使用。在类的不同层级中可以共享一个行为（方法）的名字，然而不同层次中每个类各自按自己的需要实现这个行为。当对象收到发送给它的消息时，根据该对象所属于的类动态地选用在该类中定义的实现算法 重载： 函数重载：在同一作用域内的若干参数特征不同的函数可以使用相同的函数名字 运算符重载：同一个运算符可以施加于不同类型的操作数上面 当参数不同或被操作数的类型不同时，实现函数的算法或运算符的语义是不相同的 第十三章 软件项目管理P305，软件项目管理从一组项目计划活动开始，制定计划的基础是工作量估算和完成期限估算。为了估算项目的工作量和完成期限，首先需要估算软件的规模。代码行技术是比较简单的定量估算软件规模的方法。P320，民主制程序员组的主要优点和缺点。【记熟】 优点： 小组规模小，可以减少通信问题 容易确定小组的质量标准 组员关系密切，能够相互学习 组员们对发现的程序错误持积极态度，有助于更快地发现错误，产生高质量的代码 组员们享有充分民主，小组有高凝聚力，组内学术氛围浓厚，有利于攻克技术难关 缺点：由于没有明确的权威指导开发工程的进行，组内间缺乏必要的协调，最终可能导致工程失败 民主制程序员组适用于开发有较高难度的软件工程 图的概念第二章 可行性研究 2.3 系统流程图：是概括地描绘物理系统的传统工具。 2.4 数据流图（DFD图）数据流图是一种图形化技术，它描绘信息流和数据从输入移动到输出的过程中所经受的变换 第三章 需求分析 3.4 实体-联系图（ER图）：提供了表示实体类型、属性和联系的方法，用来描述现实世界的概念模型 3.6 状态转换图：通过描绘系统的状态及引起系统状态转换的事件，表示系统的行为 第五章 总体设计5.4 描绘软件结构的图形工具 5.4 HIPO图：在层次结构图的基础上推出的一种描述系统结构和模块内部处理功能的工具 5.4 结构图：描绘软件结构的图形工具 第六章 详细设计6.3 过程设计的工具 6.3 盒图（N-S图）是结构化编程中的一种可视化建模，严格遵循结构程序设计精神 6.3 问题分析图（PAD图）：使用二维树形结构的图表示程序的控制流 6.3 PDL：过程设计语言，也成为伪码，是用正文形式表示数据和处理过程的设计工具6.4 面向数据结构的设计方法 6.4 Jackson图：便于表示层次结构，而且是对结构进行自顶向下分解的有力工具 第九章 面向对象方法学引论9.6 功能模型 9.6 用例图：呈现了一些参与者，一些用例，以及它们之间的关系，主要用于对系统、子系统或类的功能行为进行建模 "},{"title":"Final Cut Pro学习笔记","date":"2021-02-08T11:51:43.000Z","url":"/2021/02/08/fcp/","tags":[["FCPX","/tags/FCPX/"],["剪辑","/tags/%E5%89%AA%E8%BE%91/"]],"categories":[["剪辑","/categories/%E5%89%AA%E8%BE%91/"]],"content":"将视频片段添加到时间线：IO确定范围，E添加L向前播放，K暂停，J向后播放，两下L快进按Q，素材添加到视频时间线上方按W，素材 添加到视频中间E：导入素材D：替换 切割删除：选择片段边缘，英文输入法状态下，按住”,”或”.”，延长或缩短片段，加按shift可以一次10帧的速度快速变化按住B切割，然后松开，依然是选择工具光标放在切割点，command+B快速切割范围选择工具：按下R不松，选中片段光标放在切割点，option+[**，快速删除光标左边的片段**option+command+delete，删除主时间线片段的同时，不影响上下方的素材 时间线：command+R 视频上方弹出速度条，将光标放到边缘进行拖移，改变片段播放速度。点击速度旁边的小箭头可以精确调速。shift+B可以分区调整速度。ctrl+R渲染所选部分剪辑完成后，文件，删除生成的片段，减小硬盘空间占用command+/-调整时间线大小shift+Z 完整的时间线快捷键：M标记N吸附command+Z 撤销上一步 音频：音频两端时间点，向内拖动——渐弱用R选中部分音频，上下拖拽，调节局部音量大小整条时间线，control+/-，精确调节音量大小一般来说，音量在-6和0之间 字幕：光标右边，shift+Q光标左边使用R框选片段，使用Q自动匹配字幕长度在检查器中可以双击编辑字幕，按下回车是换行，command+回车退出编辑control+T，基本字幕 转场：双击自动添加，片段两侧均有，选择片段边缘，仅添加到片段一侧。快捷键command+T。 导出：command+E，母版文件，设置，解码器“H.264”，仅存储，导出格式为mov导出mp4：格式“电脑”，编码器“H.264较好质量”添加目的位置，对母版文件默认进行修改。 补充：选中资源库无法拖入素材，应该选中事件 如果选中了片段的一部分，按住option+X可以取消选择，然后单击选择整个片段 多选多轨素材，右键可以新建复合片段，还可以组合视频和音频 按住option拖拽字幕，可以复制，但是修改会影响全部，应该右键在浏览器中显示，菜单栏选择编辑，复制片段，此时修改不会影响全部 编辑-&gt;添加静帧；而shift+H：添加静帧，更加方便由于片段没有被切开 主时间线有磁力吸附，但是其他时间线默认没有。此时可以多选多段素材，右键创建故事情节(command+G)，点击此故事情节上面的灰色横条，拖动可以移动整条时间线 使用快捷键T拖动光标，可以调整两个片段之间的切入点 默认只在主时间上粘贴（command+V）可以使用option+ V，粘贴为连接片段 在时间线最前面插入发生器：空隙（Option+ W），选择空隙，control+D，输入1，设定时长为1，然后将音乐移动到最前面 option+command+delete，无视吸附的连接删除被吸附的片段，保留所吸附的片段 调整变速而又不影响片段长度，可以右键从故事情节中提取（option+command+上），此时可以根据下方的空隙长度调整片段速度，最后右键，覆盖至主要故事情节 教程基础选中一个片段的开头或结尾，把鼠标放到目标位置，Shift+X：延长编辑 方向键上/下：切割点切换（shift以10帧为单位） 方向键左/右：左右移动 command+option+点击吸附片段：更改吸附点 option+W：添加空隙 shift+delete：替换空隙 接合连续的片段：菜单-&gt;修剪-&gt;接和片段 按住·删除，可以保留吸附的片段（option+command+delete，删除主时间线片段的同时，不影响上下方的素材） 按住·或使用范围选择工具可以解除吸附的限制 范围选择状态下，X：全选 control+E：精确度编辑器 效果command+option+E：添加默认音频效果 加色模式：去掉黑色 减色模式：去掉白色 Alpha通道模版：类似剪切蒙版 停用：V control+T：添加默认字幕 添加关键帧：在视频动画面板（control+V打开），按住option，点击时间线即可添加，或使用option+K 拷贝关键帧：option+shift+C 调出时间码：control+D 添加默认转场：command+T 添加默认效果：Option+E 效果：信箱模式：可以添加画面遮幅 效果：删减：可以添加马赛克或局部模糊 风格化：简单边框、照片回忆 option拖动：可以复制片段 复制粘贴属性：command+C，Shift+Command+V M添加标记，可以在索引删除标记，或使用control+M删除标记 素材管理F：添加到个人收藏 U：取消个人收藏 shift+F：定位选中的当前媒体位置 command+K：关键词管理器，1～9:添加对应关键词；0:删除关键词 播放command+L：循环播放 I O /：播放所选片段 J：倒放 L：快放 真正的复制：将项目复制为快照 和 菜单-&gt;片段-&gt;引用新的父片段 motion：P29、P31、P32、P60"},{"title":"《剪辑的语法》读书笔记","date":"2021-01-30T04:37:02.000Z","url":"/2021/01/30/%E5%89%AA%E8%BE%91%E7%9A%84%E8%AF%AD%E6%B3%95/","tags":[["剪辑","/tags/%E5%89%AA%E8%BE%91/"]],"categories":[["剪辑","/categories/%E5%89%AA%E8%BE%91/"]],"content":"第一章 剪辑基础1.1 基本的剪辑转换 切：一个镜头与下一个镜头的瞬时转换 叠化：从一个镜头的结束画面逐渐转换到下一个镜头的开始画面 划变：以特定角度的一条线或图形穿过屏幕，实现镜头的切换 淡入淡出：逐渐从全黑的屏幕转为全部可见的图像，或者从全部可见的图像转为全黑的屏幕 1.2 剪辑的步骤 获取：获取必要的镜头素材和相关的媒体文件 整理：以一定形式组织所具有的文件 回看和筛选：回看所有素材，挑选出最适合项目的片段 顺片：将所有主要的镜头影像和声音元素按逻辑顺序进行组合 粗剪：确定主要元素的时间节奏 精剪：继续细化故事结构，此步骤完成后作品不需要进行大的修改 图像锁定：所有图像元素全部定好，无需修改 生成母版和交付：导出剪辑的媒体文件 第二章 认识镜头2.1 基本镜头类型 超特写 大特写 特写 中特写 中景 中远景 远景/广角镜头 大远景 超大远景 双人镜头 过肩镜头 2.2 镜头拍摄四要素 变焦镜头 摄像机移动 座架/支架 拍摄对象 2.3 镜头类别 简单镜头 镜头未移动 摄像机未移动 座架未移动 简单的被摄对象移动 复杂镜头 镜头移动 摄像机移动 座架未移动 简单的被摄对象移动包括： 横摇 纵摇 横摇与纵摇（摄像机镜头斜上或斜下移动） 镜头移动（伸缩镜头或者变焦点） 镜头移动和横摇（横摇摄像机以隐藏伸缩镜头） 镜头移动和纵摇（纵摇摄像机以隐藏伸缩镜头） 被摄对象移动和横摇 被摄对象移动和纵摇 运动镜头 镜头移动 摄像机移动 座架移动 更复杂的被摄对象移动 2.4 一个镜头成败的关键分析镜头成败的标准： 焦点：确保焦点准确 音质：确保良好的音质 曝光和色温：优先选择曝光较好的镜头，尽量避免过暗或者过亮的影像 画面和构图：天空留白/合适的视线空间/水平线和画面顶部平行/垂直摄像机角度合适… 银幕方向：演员或物体向银幕的左侧或右侧的运动方向必须一致 180°规则（轴线运动）：常见于两人对话场景，越轴的镜头通常无法使用，因为它们破坏了该场景已经设定的银幕方向 30°规则：要求摄影师沿着180°弧度将摄像机移动至少30°，避免过于相似的画面产生“跳切”现象 匹配角度：拍摄每个人物时每个镜头中该人物的角度、在画面中的大小、面部的焦点要一致 匹配视线：观众必须能够沿着从双眼到感兴趣的物体的假想线，越过剪辑点，进入新的镜头 动作连贯：一个镜头中演员的动作或演员周围的动作必须与同一场景中以另一角度完成的相同动作近似于完全匹配 对话连贯：注意台词，音色和语速是否不同 表演：选择最适合所剪辑的故事的表演 第三章 剪辑的时机和原因3.1 好剪辑六要素 信息 新的信息是所有剪辑的基础，所切入的新的镜头应该呈现给观众新的信息（视觉/听觉） 剪辑师承担的任务之一就是调度观众的情绪和思维，使他们积极参与到故事中来，令他们不断思考从而对整个影片兴致盎然 动机 切出镜头时需要考虑动机（视觉/听觉） 动机因素通常是当前镜头中由主体或客体发出的一种动作 听觉动机中的声音可以由当前屏幕中可以看到的东西生成 可视物体的大小可影响该物体制造的声音的音量 声桥——将声音作为转场动机：一个声音推动镜头切入下一个镜头 镜头构图 从一个构图、声音完美的镜头开始剪辑所有的镜头——简单的、复杂的或运动的。 挑出两个基本但却构图合理的镜头后将其逐步切入 需要抓住观众的视线追踪，但同时不要让他们太费力地寻找下一个信息 精美的、多层次的镜头构图在屏幕上效果极佳，但同时也需要考虑何时切入、切出镜头，以及观众如何在更加复杂的视觉环境中捕捉到需要的信息 摄像机角度 注意遵循180°规则和30°规则，同时避免因过于相似的两个画面的切换而产生的“跳切”现象 连贯 内容的连贯 要么镜头中已经包含了符合内容连贯性的所有素材 要么需要通过切出并插入逻辑镜头，从而掩饰视觉上的不协调 动作的连贯 演员或物体向银幕的左侧或右侧的运动方向必须一致 应该遵循180°规则 可以在两个银幕方向不同的镜头之间插入一个逻辑镜头，用于打破演员动作在视觉上的不连贯，使得演员有时间在第二个银幕方向改变之前继续未完成的动作 位置的连贯 应当将演员或物体位置连贯的多个镜头组合在一起 导致演员或物体从银幕的一侧跳到另一侧会分散观众的注意力，从而破坏剪辑的流畅性 声音的连贯 同一剪辑的场景中，语音和物体的声音级别应该保持一致 物体和摄像机之间的距离、物体的视角发生变化时，音量也应该随之发生变化 声音 可以作为动机之源 可以传达信息 可以作为声桥，用于转场 根据声音和画面出现的顺序，可分为： 拆分剪辑/L剪切/叠加：声音先于画面或画面先于声音，通常在精剪中处理 对接剪切/直切：在同一时刻切画面和声音，通常在顺片和粗剪中处理 第四章 转场和剪辑分类4.1 切 适用的场合 动作连贯 需要一个冲击变化 信息或地点变化 好“切”的六要素 信息：节目中的每个镜头都提供一些新的信息 动机 镜头一中的某些东西需要镜头二的出现来加以说明 可以根据某种已知或未知的节拍，或者自己的感觉切入下一个镜头 镜头构图 好的剪辑会让镜头二既有趣又在构图上有别于镜头一 新镜头构图的不同会让观众搜寻新镜头中出现的新的信息，只要不被新镜头中过于繁杂的构图扰乱，观众就不会注意到剪切 摄像机角度：每个切入的连续镜头，摄像机角度都应该和上一个镜头不同（焦距变化、摄像机角度变化） 连贯：在两个连续的要剪在一起的镜头中，连续的移动或动作应最大限度地匹配，从而保持画面的流畅性 声音 剪辑点交叉时镜头应该存在某种声音连贯或推进 音量应该和画面透视关系的视角保持一致 从一个时间或地点切入另一个时间或地点，在声音类型和音量上应该有所体现（动态剪辑） 4.2 叠化 适用的场合 时间变化 地点变化 时间需要延缓或加速 故事中出现情绪渲染 切出和切入画面之间存在强烈的视觉关联 好“叠化”的六要素 信息：新镜头需要提供一些新的信息 动机：有一个确切的动机事件或叙事需要 镜头构图：在重叠的中点处应该有各自的构图，以避免视觉冲突 可以叠化对立的画面（镜头一的被摄对象一个在画面左边而镜头二的被摄对象一个在画面右边） 可以叠化匹配的帧（构图非常相似但画面主体不同） 摄像机角度：应该在不同摄像机角度的两个镜头间使用叠化 声音：两个镜头的声道也应叠化 时间：叠化的时长应该根据影片的实际需要进行调整 叠化的作用 用于涉及“闪回”的故事，在时间画面的最后一个镜头切入过去时间的第一个镜头 打造浓缩时间的蒙太奇效果 配合慢动作画面，延缓时间的流逝（浪漫的、悲伤的镜头），可以给人们时间去思考感受 4.3 划变 适用的场合 时间变化 地点变化 好“划变”的六要素 信息：节目中的每个镜头都提供一些新的信息 动机：想离开某个场景或者某个片段 镜头构图：划变前后衔接的镜头画面不需要任何特殊的视觉关联 摄像机角度：无固定的准则 声音：可以直切或叠加，还可以加入特殊的音效 时间：划变的时长应该根据影片的实际需要进行调整 4.4 淡入淡出 适用的场合 节目开头/结尾 章、场景、片段或幕的开头/结尾 时间变化之处 地点变化之处 好“淡入淡出”的四要素 动机：镜头的开始和结束是淡入淡出的动机 镜头构图：使用低反差的影像作为一个镜头的开始或结束 声音：随着画面变亮或变暗而升高或降低 时间：淡入淡出的时长应该根据影片的实际需要进行调整 4.5 剪辑的五种主要类型 连续动作剪辑（移动剪辑/连贯剪辑）：显示连续动作或被摄主体/客体移动的镜头之间的剪辑 画面位置剪辑（定向剪辑/定位剪辑）：通常一个强烈的视觉元素占据画面的一侧，并将注意力或者动作引向画面的另一侧，常用于双人对话镜头 匀称剪辑：从一个具有明显形状、颜色、大小或声音的镜头切入另一个具有匹配形状、颜色、大小或声音的镜头，通常采用叠化 概念剪辑（动态剪辑/意念剪辑）：处理两个表达内容不同的独立镜头，并可以通过画面中特定时间里多个视觉元素的并列表达故事中暗含的意思 综合剪辑：融合了另外四种剪辑类型中的两种或者更多类型 第五章 剪辑师的基本练习5.1 声音和视觉是搭档而不是对手 声音信息应该延伸和扩展视觉影像所传达的信息和故事，同时让镜头更具感染力 避免屏幕上的影像和声音不匹配 通过刺激听觉使视觉更具有震撼性，从而为观众提供多感官的体验 5.2 新的镜头应包含新的信息 好的剪辑基于观众对连贯的视觉信息的期待 每个新的镜头都应添加新的视觉或听觉信息，从而引起观众的兴趣 5.3 每一次剪辑都需要理由 尽量不要对那些独立完整的镜头进行剪切 反应镜头有助于打破一个角色连续不断的语言冲击，提供某些关于倾听方的信息 确定镜头的长度，让眼睛有足够的时间来解读和吸收视觉信息 5.4 观察动作线 动作线沿着演员的视线或跟随被摄对象运动的方向切过动作区域 忠实于所建立起的银幕方向、注意线和运动线来剪辑材料 5.5 挑选合适的剪辑形式 如果两个动作通过切无法很好地融合，可能出现了以下错误： 角度错误 连贯方面的错误 没有新信息 没有动机 镜头构图错误 选择恰当的剪辑类型，了解各种转场的最佳使用时机 5.6 越好的剪辑越不容易被注意5.7 剪辑是一种创作第六章 实践准则 避免从不正确的天头留白镜头切换到一个正确的天头留白镜头，反之亦然。 避免镜头中虚假物体离人物头部过近。 避免画面边缘切掉人脸或身体。 剪接匹配镜头而不采用不匹配镜头。 剪辑电影对话时，不要裁掉表演中的停顿，除非特殊要求。 反应镜头出现在话语中间比在话语结束更自然。 寻找剪辑点时无需受对话约束。 在三人对话中，不要从双人镜头切换到另一个双人镜头。 在剪辑单个人物的特写镜头时，脸部越大，越好。 对于单个人物而言，尽量避免切换到拍摄角度相同的镜头。 剪接“起身”时，你要尽量使被摄对象的眼睛长时间保留在画面内。 动作特写剪接时应选择动作较慢的特写镜头。 推拉镜头优于变焦镜头。 谨慎处理无目的的拉远镜头。 剪辑横摇镜头或平移镜头时，应使用画面流畅、计时精确且引发被摄对象移动的镜头。 应从静止画面开始或结束横摇、纵横或推拉镜头。 如果横摇、平移或推拉镜头内被摄物或被摄对象正在移动而接下来又变为静止，那么不要切换到同一物体或人物的静止镜头。 在同一个方向移动的物体，比如人，都有一条动作轴线。 在剪辑时不得越过这条动作轴线，否则运动方向会发生逆转。 剪接运动镜头时，避免在同一组人的两个双人镜头间切换。 剪辑电话会话场景时，应多角度拍摄人物头部。 连续动作剪辑中，如果人物从画面左侧走出，同一人物进入下个镜头时应在右侧。 注意镜头中“兴趣物”在银幕上的位置。 一系列特写镜头后，应尽快呈现个远景镜头。 对新出场的人物或被摄对象应用特写镜头。 在剪辑新场景新背景时，应第一时间采用定场镜头。 连续动作剪辑时，避免从一个人物的远景切换到特写。 注意切换到远景后再切到黑屏。 节目开始时，声音轨道先于视觉轨道。 节目结尾时，使用结尾音乐。 将剪辑好的影片先搁置一段时间后再重新审视。 一个场景中采用人物特写镜头达到最佳效果。 只要人物的“视线”停在兴趣物上，就应立即切出。 在纪录片剪辑中应去掉受访者言语中的口头禅“嗯”、“啊”。 在声轨层面，确保音乐不要压制话语。 录制好画面外或过肩镜头演员干净清晰的对话声，将其置于对话音轨之下。 注意片内字幕和下沿字幕图像持续时间应合理。 如必要，可在声道音量大的地方剪切。 充分利用片段中的自然划变作为转场点。 利用镜头中的快速横插作为转场点。 避免在剪辑点剪切改变银幕方向的横据和纵摇镜头。 如可能，将剪辑后的影片拿给其他人看并征求他们的反馈。 剪辑连贯动作镜头时，通过第二个镜头的起始画而推进动作进展。 延长粗剪时间，不要试图在剪辑初期就尽善尽美。 带有明喻关系的镜头之间使用叠化。 使用插人镜头可以弥补连贯动作或压缩1延长时间中的间隙。 当被摄对象离开画面时，应避免出现空镜头。 "},{"title":"响应式网页设计实战","date":"2020-12-05T10:12:57.000Z","url":"/2020/12/05/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1%E5%AE%9E%E6%88%98/","tags":[["前端","/tags/%E5%89%8D%E7%AB%AF/"],["CSS","/tags/CSS/"]],"categories":[["前端","/categories/%E5%89%8D%E7%AB%AF/"]],"content":"1.设计思路在本响应式网页设计中，通过媒体查询 @media 规则，使网页自适应不同浏览设备的屏幕宽度。网页中 &lt;header&gt; 位于网页顶端， &lt;footer&gt; 位于网页底端， 二者不论在哪一种情况下，其宽度总是为浏览窗口宽度的100%，而 &lt;nav&gt; 、&lt;article&gt; 和 &lt;aside&gt; 根据不同浏览窗口的大小自适应其宽度，并以不同方式布局： 当浏览窗口宽度大于768px时，&lt;nav&gt; 位于网页左侧 、&lt;article&gt; 位于网页中间，&lt;aside&gt; 位于网页右侧，适应桌面端浏览窗口； 当浏览窗口宽度大于480px小于768px时，&lt;nav&gt; 和 &lt;article&gt; 位于网页上方并由左至右排列 、&lt;aside&gt; 位于网页下方，适应ipad端浏览窗口； 当浏览窗口宽度小于480px时，&lt;nav&gt; 、&lt;article&gt; 和 &lt;aside&gt; 由上至下依次排列，适应手机端浏览窗口。 2.网页截图桌面端： ipad端： 手机端： 3.代码实现test.html test.css"},{"title":"CSS3笔记(4)——鼠标指针形状+响应式网页设计","date":"2020-11-05T12:34:25.000Z","url":"/2020/11/05/CSS3%E7%AC%94%E8%AE%B0(4)%E2%80%94%E2%80%94%E9%BC%A0%E6%A0%87%E6%8C%87%E9%92%88%E5%BD%A2%E7%8A%B6+%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/","tags":[["前端","/tags/%E5%89%8D%E7%AB%AF/"],["CSS","/tags/CSS/"]],"categories":[["前端","/categories/%E5%89%8D%E7%AB%AF/"]],"content":"一、设置鼠标指针形状使用 cursor 属性可以更改鼠标指针样式。 语法 二、媒体查询1. 媒体类型下列是CSS中定义的媒体类型(media types). all 用于所有的媒体设备。 aural 用于语音和音频合成器。 braille 用于盲人用点字法触觉回馈设备。 embossed 用于分页的盲人用点字法打印机。 handheld 用于小的手持的设备。 print 用于打印机。 projection 用于方案展示，比如幻灯片。 screen 用于电脑显示器。 tty 用于使用固定密度字母栅格的媒体，比如电传打字机和终端。 tv 用于电视机类型的设备。 CSS3 的多媒体查询继承了 CSS2 多媒体类型的所有思想： 取代了查找设备的类型，CSS3 根据设置自适应显示。 媒体查询可用于检测很多事情，例如： viewport(视窗) 的宽度与高度 设备的宽度与高度 朝向 (智能手机横屏，竖屏) 。 分辨率 目前很多针对苹果手机，Android 手机，平板等设备都会使用到多媒体查询。 2. 媒体特性下列是CSS中定义的媒体特性(media fatures). color: 输出设备(屏幕)每个色彩的位数(bits)。 color index: 输出设备(屏幕)可以输出的色彩数量。 height: 浏览器窗口的高度。 deic-height: 建议弃用，输出设备(屏幕)的高度。 widh: 浏览器窗口的宽度。 devicc-width: 建议弃用，输出设备(屏幕)的宽度。 aspect-ratio: 浏览器窗口宽度和高度的比。 deie-spet-rationo: 建议弃用，输出设备(屏幕)宽度和高度的比。 monochrome: 国白屏幕每个色彩的位数。 resoluion: 输出设备(屏幕)的屏都分辨事，单位是dpi或dpcm。 上述所有属性皆可以加上前级词“min-“”或“max-“表示“最小值”或“最大值”，例如“min-widh”表示浏览器窗口的最小宽度。 orientation: 输出设备(屏幕)的方向，可能值是landscape (水平)或portait (垂直)。 scan: 输出设备(屏幕)的扫描方式，可能值是interlace (交错式)或progressive (循序式)。 grid: 输出设备(屏幕)的扫描方式，可能值是1 (网格grid)或0 (点阵bimap)。3. 媒体查询 @media语法多媒体查询由多种媒体组成，可以包含一个或多个表达式，表达式根据条件是否成立返回 true 或 false。 4. 媒体查询时使用 &lt;link&gt;针对不同的媒体使用不同 stylesheets : 三、响应式（RWD）网页设计1. 设计响应式网页的基本原则对于响应式网页而言，主要要掌握的原则如下： 使用HTML设计网页内容。 为手机倒览屏事设计CSS样式表，让网页可在手机屏幕完美呈现。 为平板电脑浏览屏幕设计CSS样式表，让网页可在平板屏幕完美呈现。 为PC屏幕设计CSS样式表，让网页可在PC屏幕完美呈现。 2.viewportviewport 指的是屏事分辨率，会因为所使用的设备而有不同的值。 在设计响应式网页时，必须在 &lt;meta&gt; 元素内进行下列设定。 &lt;meta&gt; 的值viewport将告诉浏览器如何控制页面尺寸和比例。 width=device-width, 可以获得浏览设备的宽度分辨率(pixel)。 initial-scale=1.0, 可以设定在网页插入图案时的初始缩放比例。 设计响应式网页有下列原则: 由于浏览屏幕宽度是不固定的， 所以不要采用固定宽度，应采用百分比来设置宽度。5图像宽度不要大于浏览屏幕宽度，以免需水平滚动来浏览网页。 由于每一种设备的分辨率不同，设计网页时不能只考虑种屏幕宽度。 使用绝对值定位要特别小心， 特别是大尺寸的绝对值，若不小心，就会落到浏览显示区外。 "},{"title":"CSS3笔记(3)——过渡效果+动画+变形","date":"2020-11-04T14:20:54.000Z","url":"/2020/11/04/CSS3%E7%AC%94%E8%AE%B0(3)%E2%80%94%E2%80%94%E8%BF%87%E6%B8%A1%E6%95%88%E6%9E%9C+%E5%8A%A8%E7%94%BB+%E5%8F%98%E5%BD%A2/","tags":[["前端","/tags/%E5%89%8D%E7%AB%AF/"],["CSS","/tags/CSS/"]],"categories":[["前端","/categories/%E5%89%8D%E7%AB%AF/"]],"content":"一、过渡效果1. 过渡时间 transition-duration 属性语法 time: 规定完成过渡效果需要花费的时间（以秒或毫秒计）。 默认值是 0，意味着不会有效果。2. 过渡效果 transition-property 属性语法 none: 没有属性会获得过渡效果。 all: 所有属性都将获得过渡效果。 property: 定义应用过渡效果的 CSS 属性名称列表，列表以逗号分隔。3. 过渡延迟时间 transition-delay 属性语法 time: 指定秒或毫秒数之前要等待切换效果开始。4. 过渡速度 transition-timing-function 属性语法 linear: 规定以相同速度开始至结束的过渡效果（等于 cubic-bezier(0,0,1,1)）。 ease : 规定慢速开始，然后变快，然后慢速结束的过渡效果（cubic-bezier(0.25,0.1,0.25,1)）。 ease-in: 规定以慢速开始的过渡效果（等于 cubic-bezier(0.42,0,1,1)）。 ease-out: 规定以慢速结束的过渡效果（等于 cubic-bezier(0,0,0.58,1)）。 ease-in-out: 规定以慢速开始和结束的过渡效果（等于 cubic-bezier(0.42,0,0.58,1)）。 cubic-bezier(n,n,n,n): 在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值。5. 简易表示法 transition 属性语法 二、动画1. 关键帧 @keyframes语法 2. 运用关键帧 animation-name 属性语法 3. 动画时间 animation-duration 属性语法 4. 变速方式 animation-timing-function 属性语法 5. 动画次数 animation-iteration-count 属性语法 6. 重复执行的方向 animation-direction 属性animation-direction 属性定义是否循环交替反向播放动画。 语法 7. 动画暂停/继续 animation-play-state 属性语法 8. 延迟时间 animation-delay 属性语法 9. 延迟与完成样式 animation-fill-mode 属性animation-fill-mode 属性规定当动画不播放时（当动画完成时，或当动画有一个延迟未开始播放时），要应用到元素的样式。 默认情况下，CSS 动画在第一个关键帧播放完之前不会影响元素，在最后一个关键帧完成后停止影响元素。 语法 10. 简易表示法 animation 属性语法 三、变形1. 变形 transform 属性transform 属性应用于元素的2D或3D变形。这个属性允许将元素旋转，缩放，移动，倾斜等。 2D变形可分为下列几种： 移动：translate()、translateX()、translateY() 缩放：scale()、scaleX()、scaleY() 旋转：rotate() 倾斜：skew()、skewX()、skewY() 矩阵：matrix() 3D变形可分为下列几种： 移动：translate3d()、translateZ() 缩放：scale3d()、scaleZ() 旋转：rotate3d()、rotateX()、rotateY()、rotateZ() 透视：perspective() 矩阵：matrix3d() 语法 2. 变形基准点 transform-origin 属性transform-origin 属性可以设定变形时的基准点。默认基准点在元素中心，即对于2D，默认为(50%，50%)，对于3D，默认为(50%，50%，50%)。 语法 3. 视点距离 perspective 属性perspective 属性用于设置视点距离，其与 perspective() 函数的区别： perspective()函数: 设置元素自身的视点距离 perspective属性: 设置子元素的视点距离 语法 4. 透视基准点 perspective-origin 属性perspective-origin 属性可以设定透视基准点。默认基准点在元素中心，即为(50%，50%)。语法 5. 嵌套元素显示方式 transform-style 属性transform-style 属性指定嵌套元素是怎样在三维空间中呈现。 语法 6. 背面显示 backface-visibility 属性backface-visibility 属性定义当元素背面向屏幕时是否可见。 语法 "},{"title":"CSS3笔记(2)——盒子模型+多栏+定位+弹性容器","date":"2020-11-03T13:07:10.000Z","url":"/2020/11/03/CSS3%E7%AC%94%E8%AE%B0(2)%E2%80%94%E2%80%94%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B+%E5%A4%9A%E6%A0%8F+%E5%AE%9A%E4%BD%8D+%E5%BC%B9%E6%80%A7%E5%AE%B9%E5%99%A8/","tags":[["前端","/tags/%E5%89%8D%E7%AB%AF/"],["CSS","/tags/CSS/"]],"categories":[["前端","/categories/%E5%89%8D%E7%AB%AF/"]],"content":"一、盒子模型1. 构成盒子模型由内容盒、内边距、边框和外边距构成 2. 外边距（margin）使用方法： 1.单边外边距属性 2.简写属性 注意： &lt;body&gt; 元素的 margin 属性值默认为8px 当垂直排列的两个元素外边距相遇时，浏览器会自动合并成二者中的较大值，但行内(inline)元素框、浮动框与绝对地址框不会合并3. 内边距（padding）使用方法与外边距相似4. 边框（border）（1）边框样式 border-style 属性 （2）边框颜色 border-color 属性border-color属性用于设置边框的颜色。可以设置的颜色： name - 指定颜色的名称，如 “red” RGB - 指定 RGB 值, 如 “rgb(255,0,0)” Hex - 指定16进制值, 如 “#ff0000” 还可以设置边框的颜色为”transparent”。 注意： border-color单独使用是不起作用的，必须得先使用border-style来设置边框样式。 （3）边框宽度 border-width 属性为边框指定宽度有两种方法：可以指定长度值，比如 2px 或 0.1em(单位为 px, pt, cm, em 等)，或者使用 3 个关键字之一，它们分别是 thick 、medium（默认值） 和 thin。 注意：CSS 没有定义 3 个关键字的具体宽度，所以一个用户可能把 thick 、medium 和 thin 分别设置为等于 5px、3px 和 2px，而另一个用户则分别设置为 3px、2px 和 1px。 （4）简易表示法 border 属性语法 （5）边框圆角 border-radius 属性语法 注意: 每个半径的四个值的顺序是：左上角，右上角，右下角，左下角。 如果省略左下角，右上角是相同的。如果省略右下角，左上角是相同的。如果省略右上角，左上角是相同的。 （6）图样边框 border-image 属性语法 5. 盒子阴影 box-shadow 属性语法 6. 盒子大小 box-sizing 属性规定容器元素的最终尺寸计算方式 语法 补充： 如果创造了一个 &lt;div&gt; 没有设置 box-sizing 属性为 border-box(不设置的话默认值为 content-box.)，同时你设置 width:100px; border:10px solid red; padding:10px; 那么最终 div 容器的实际宽度为：*100px(width)+210px*(padding)+2*10px(border)=140px，所以你会得到一个比你预期（100px）还要更大的容器，结果就是会破坏网页布局。（注意**：容易 margin 的尺寸不会被计算入最终容器宽度，因为对他的定义为对这个容器的留白，但不属于容器本身。） 如果当我们定义一个容器的 box-sizing 属性为 border-box 时（表达式：br{box-sizing:border-box}），那么我们创建一个和上段中相同设置的 &lt;div&gt; 容器时，那么他的最终宽度即为 100px, 那么它的内容部分（content）的有效宽度变成了 100px-210px-210px =60px; 所以你会得到一个你预期大小的盒子容器，但是只是被压缩了内容部分尺寸而已，但是对于整体布局而言益处颇多。 总结： W3C标准盒模型（content-box），border、padding 的设置会破坏元素宽高，必须得重新计算，非常麻烦（除了在IE浏览器，默认就是标准盒模型，所以可以用 box-sizing 来转换）； IE（怪异）盒模型（border-box），border、padding 的设置不会影响元素的宽高，这非常实用（且因为IE盒模型不是标准，所以才有 box-sizing 这个标准属性来设置，将它标准化）【IE6/5 是怪异模型，IE7开始是标准盒模型】 7. 内容溢出处理语法 8. outline 属性outline（轮廓）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。语法 outline-offset：设置轮廓框架在 border 边缘外的偏移值9. 可调整大小 resize 属性语法 二、多栏布局1. 栏数量和宽度 columns 属性（1）栏数量 column-count 属性语法 auto: 默认值（单栏），但是会根据 colunm-width 属性值自动调整 number: 栏的数量（2）栏宽度 column-width 属性语法 auto: 默认值（单栏），但是会根据 colunm-count 属性值自动调整 number: 指定栏的最佳宽度，并非绝对宽度，浏览器会根据窗口宽度调整 （3）简易表示法 columns 属性语法 2. 栏间距 column-gap 属性语法 normal: 默认值，W3C建议为1em number: 指定栏间距值3. 栏线 column-rule 属性（1）栏线类型 column-rule-style 属性语法 （2）栏线颜色 column-rule-color 属性语法 color: 颜色值（3）栏线颜色 column-rule-width 属性语法 （4）简易表示法 column-rule 属性语法 4. 跨栏显示 column-span 属性语法 none: 默认值，不跨栏显示 all: 跨栏显示5. 栏填充方式 column-fill 属性语法 balance: 默认值，将内容平均分割 auto: 填满一栏后再填充下一栏6. 换栏和换页（1）在之前换栏/页 break-before 属性语法 auto: 默认值，由浏览器自动调整 always: 特定位置处换栏/页 avoid: 特定位置处不换栏/页 left: 换页，下一页在左页 right: 换页，下一页在右页 page: 特定位置处换页 column: 特定位置处换栏 avoid-page: 特定位置处不换页 avoid-column: 特定位置处不换栏（2）在之后换栏/页 break-after 属性语法 属性同上（3）在元素中换栏/页 break-inside 属性语法 auto: 默认值，由浏览器自动调整 avoid: 特定元素内不换栏/页三、定位与网页排版1. 区块层级与行内层级 **区块层级(block)**：在新的一行放置，常见元素：&lt;div&gt; &lt;hn&gt; &lt;p&gt; &lt;pre&gt; **行内层级(inline)**：在同一行放置，常见元素：&lt;a&gt; &lt;img&gt; &lt;span&gt;2. 盒子大小极限语法 3. display 属性语法 4. position 属性语法 absolute: 相对于浏览器窗口左上角，窗口卷动时元素随之卷动 fixed: 相对于浏览器窗口左上角，窗口卷动时元素不随之卷动 relative: 相对于正常位置定位 static: 以正常顺序（即HTML文件代码顺序）排序，对于区块盒子，沿竖直方向由上往下显示；对于内层级，沿水平方向从左至右显示 sticky: 粘性定位的元素是依赖于用户的滚动，在 position: relative 与 position: fixed 定位之间切换（注意：元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。这个特定阈值指的是 top, right, bottom 或 left 之一，换言之，指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同。）5. float 属性float 属性指定一个盒子（元素）是否应该浮动 注意： 绝对定位的元素忽略float属性 语法 6. clear 属性clear 属性指定段落的左侧或右侧不允许浮动的元素 语法 7. 叠放次序 z-index 属性拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面 语法 8. 显示或隐藏 visibility 属性语法 9. object-fit 属性object-fit 属性指定元素的内容应该如何去适应指定容器的高度与宽度 object-fit 一般用于 img 和 video 标签，一般可以对这些元素进行保留原始比例的剪切、缩放或者直接进行拉伸等 语法 10. 垂直对齐 vertical-align 属性语法 vertical-align 属性设置一个元素的垂直对齐方式。 该属性定义行内元素的基线相对于该元素所在行的基线的垂直对齐。允许指定负长度值和百分比值。这会使元素降低而不是升高。在表单元格中，这个属性会设置单元格框中的单元格内容的对齐方式。 四、弹性容器1. 弹性容器声明弹性盒子由弹性容器(Flex container)和弹性子元素(Flex item)组成。 弹性容器通过设置 display 属性的值为 flex 或 inline-flex将其定义为弹性容器。 弹性容器内包含了一个或多个弹性子元素。 语法 flex: 将此元素声明为区块(block)层级的弹性容器 inline-flex: 将此元素声明为行内(inline)层级的弹性容器2. 版面方向 flex-direction 属性语法 row：横向从左到右排列（左对齐），默认的排列方式 row-reverse：反转横向排列（右对齐，从后往前排，最后一项排在最前面 column：纵向排列 column-reverse：反转纵向排列，从后往前排，最后一项排在最上面3. 多行排列 flex-wrap 属性语法 nowrap: 默认， 弹性容器为单行。该情况下弹性子项可能会溢出容器 wrap: 弹性容器为多行。该情况下弹性子项溢出的部分会被放置到新行，子项内部会发生断行 wrap-reverse: 反转 wrap 排列4. 方向和行数简易表示法 flex-flow 属性这是 flex-direction 和 flex-wrap 属性的简易表示法： 语法 5. 排列顺序 order 属性默认排序按照元素在代码中出现的顺序排列，当元素设置order属性值后，排列时order较小者在前 语法 number: 默认值为0，可为正整数6. 增加区块对象宽度 flex-grow 属性用于设置或检索弹性盒子元素的放大比例 语法 number: 默认值为0，是相对于其他版面区块元素的放大比例7. 缩减区块对象宽度 flex-shrink 属性用于设置或检索弹性盒子元素的缩小比例 语法 number: 默认值为0，是相对于其他版面区块元素的缩小比例8. 调整前区块宽度 flex-basis 属性用于设置或检索弹性盒伸缩基准值，即设定浮动元素的宽度 语法 number: 按长度设定宽度 auto: 默认值，根据内容设定宽度9. 增减区块宽度简易表示法 flex 属性这是 flex-grow 、flex-shrink 和 flex-basis 属性的简易表示法： 语法 auto: 相当于 flex-grow: 1 flex-shrink: 1 flex-basis: auto 10. 横向对齐 justify-content 属性设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式 语法 11. 行内纵向对齐 align-items 属性设置或检索弹性盒子元素在flex容器的当前行的侧轴（纵轴）方向上的对齐方式 语法 12. 重写 align-self 属性align-self 属性定义flex子项单独在侧轴（纵轴）方向上的对齐方式。align-self 属性可重写该容器的 align-items 属性。 语法 13. 纵向对齐 align-content 属性在弹性容器内的各项没有占用交叉轴上所有可用的空间时对齐容器内的各项（垂直）。 语法 "},{"title":"CSS3笔记(1)——基础+段落文字+项目列表+背景+表格+渐变","date":"2020-11-02T12:22:03.000Z","url":"/2020/11/02/CSS3%E7%AC%94%E8%AE%B0(1)%E2%80%94%E2%80%94%E5%9F%BA%E7%A1%80+%E6%AE%B5%E8%90%BD%E6%96%87%E5%AD%97+%E9%A1%B9%E7%9B%AE%E5%88%97%E8%A1%A8+%E8%83%8C%E6%99%AF+%E8%A1%A8%E6%A0%BC+%E6%B8%90%E5%8F%98/","tags":[["前端","/tags/%E5%89%8D%E7%AB%AF/"],["CSS","/tags/CSS/"]],"categories":[["前端","/categories/%E5%89%8D%E7%AB%AF/"]],"content":"一、CSS3基础1. CSS3基本语法 2. CSS引入方式 行内样式 内部样式表 外部样式表 3. 字体属性： font-family: 设置字体名称，可指定多个字体名称，用逗号隔开，在前面的字体名称优先级高 font-size: 设置字号大小 （1em = 16px） font-style: 设置三种字体样式：normal（正常）italic（斜体）oblique（倾斜体） font-variant: 默认值为normal，值为small-caps时小写英文字母以小型大写字母显示 font-weight: 设置字体粗细。有以下取值：normal(400)**、bold(700)、bolder、lighter、100, 200, … , 800, 900** font-size-adjust: 设置字体宽高比 font: 依序设定属性值：style variant weight size family（省略某一项则使用默认值） @font-face: 提供服务器端字体供浏览器下载4. 属性选择器用于将具有某种属性，不论其为何值的所有元素套用该样式。 语法 5. 虚拟选择器1.链接虚拟类别 :link 和 :visited :link: 尚未被单击时可以套用该样式 :visited: 已被单击时可以套用该样式 2.动作虚拟类别 :hover :active 和 :focus :hover: 鼠标指针位于超链接字符或在此元素上时可以套用该样式 :active: 单击时可以套用该样式 :focus: 获得焦点时可以套用该样式 3.目的虚拟类别 :target :target: 为移动的目标套用该样式二、段落文字编排1. 对齐方式 text-align 属性 left: 靠左对齐 right: 靠右对齐 center: 居中对齐 justify: 左右（两端）对齐 initial: 使用默认设置 inherit: 继承父元素属性2. 首行缩排 text-indent 属性 length: 使用cm、px、pt、em等单位设定固定长度，默认值为0 %: 缩排父元素宽度的百分比 initial: 使用默认设置 inherit: 继承父元素属性3. 行高 line-height 属性 normal: 默认值 number: 设置数值，将与当前字体尺寸相乘的结果作为行高值 length: 使用cm、px、pt等单位设定固定长度 %: 设置依照当前字体尺寸的百分比 inherit: 继承父元素属性4. 字符间距 letter-spacing 属性 normal: 默认值，没有额外空间 length: 设值固定的字符间距，可以为负值 initial: 使用默认设置 inherit: 继承父元素属性5. 文字间距 word-spacing 属性 normal: 默认值，文字间距为 0.25em（4px) length: 设值额外文字的间距，可以为负值 initial: 使用默认设置 inherit: 继承父元素属性6. 处理空格 white-space 属性 normal: 默认值，浏览器会忽略空白 nowrap: 文本不换行，直到遇到 &lt;br&gt; 元素 pre: 保留空白，类似于html的 &lt;pre&gt; 元素 pre-line: 合并空白符，使文件正常换行 pre-wrap: 设定保留空白符，在浏览器中可以正常换行 initial: 使用默认设置 inherit: 继承父元素属性7. 大小写转换 text-transform 属性 none: 默认值，保留文字原本样式 capitalize: 第一个字母大写 uppercase: 字母全部转成大写 lowercase: 字母全部转成小写 initial: 使用默认设置 inherit: 继承父元素属性 8. 文字阴影 text-shadow 属性 h-shadow: 水平阴影，右正左负，不可省略 v-shadow: 垂直阴影，下正上负，不可省略 blur-radius: 模糊范围，单位和h-shadow相同，可省略 color: 阴影颜色，可省略 none: 默认值，即无阴影 initial: 使用默认设置 inherit: 继承父元素属性9. 线条装饰 text-decoration 属性 none: 默认值，即正常显示 underline: 底线 overline: 顶线 line-through: 删除线 initial: 使用默认设置 inherit: 继承父元素属性 10. 制表符宽度 tab-size 属性 number: 设置宽度数值，默认值为8，即8个英文字符宽度 length: 设值制表符长度 initial: 使用默认设置 inherit: 继承父元素属性11. 换行 word-wrap 属性 normal: 默认值，只在可以换行的地方换行，否则显示到结束为止 break-word: 可用于将较长的单字或URL网址中途换行 12. 溢出 text-overflow 属性 clip: 超出显示区不予显示 ellipsis: 超出显示区以“…”显示 string: 使用给定的字符串替换被隐藏的文本 initial: 使用默认设置 inherit: 继承父元素属性 三、项目列表1. 项目列表符号 list-style-type 属性默认值： “disc” for &lt;ul&gt; and “decimal” for &lt;ol&gt; 2. 图片项目符号 list-style-image 属性list-style-image 属性使用图像来替换列表项的标记。 3. 项目符号与编号位置 list-style-position 属性 4. 简易表示法 list-style 属性 某个属性使用默认值时可省略 四、背景1. 背景颜色 background-color 属性 2. 背景图 background-image 属性 3. 背景重复出现 background-repeat 属性默认将图片以左上角为基准点放置 space: 设定图片在水平和垂直重复出现时自动调节间距，使图片完整出现 round: 设定图片在水平和垂直重复出现时自行重设大小，使图片完整出现 4. 背景位置 background-position 属性 5. 背景大小 background-size 属性 auto: 默认选项，以原图大小显示，空间不够时只显示局部 initial: 使用默认设置 6. 背景随内容滚动 background-attachment 属性 设置背景图像是否固定或者随着页面的其余部分滚动 local: 效果与scroll相同，但在inframe显示时，背景图不滚动7. 背景显示区域 background-clip 属性指定背景绘制区域。 8. 背景显示基准点 background-origin 属性盒子模型左上角为基准点，设定关于background-position属性的相对位置 9. 简易表示法 background 属性 各值之间用空格分隔，不分先后顺序，可以只有其中的某些值 五、表格1. 表格标题使用 caption 元素的 caption-side 属性指定表格标题的位置 2. 表格底色实例： 3. 表格框线实例： 4. 单元格框线使用 table 元素的border-collapse 属性指定单元格框线模式 在separate框线模式下，可以使用 table 元素的border-spacing 属性设定单元格与单元格间或单元格与表格间框线的距离 5. 单元格内边距实例： 6. 显示或隐藏空白单元格使用 table 元素的empty-cells 属性显示或隐藏空白单元格 7. 单元格内容排版可以使用 text-align 属性以不同方式对齐单元格内容 8. 表格版面排版使用 table 元素的table-layout 属性表格版面排版方式 9. 设置表格奇偶行不同的样式使用以下选择器： 则 奇数行：tr:nth-child(2n+1) 偶数行：tr:nth-child(2n)六、渐变1. 线性渐变 linear-gardient() direction: 设定色彩方向，可以用角度或英文表示 color-stop: 设定色彩驻停点，可以在颜色后指定位置，如 red 50%，所有百分比之和等于100% css 不均匀渐变百分比表示指定颜色的标准中心线位置，百分比之间是过渡色，如果百分比位置之间有重叠会失去渐变过渡色。比如： 其中： 10% 表示 red 的颜色中心线在线性渐变方向的 10% 的位置。 85% 表示 green 的颜色中心线在线性渐变方向的 85% 的位置。 90% 表示 blue 的颜色中心线在线性渐变方向的 90% 的位置。 10% 到 85% 是 red-green 的过渡色，85%-90% 是 green-blue 的过渡色。 2. 放射渐变 radial-gardient()默认情况下，渐变的中心是 center（表示在中心点），渐变的形状是 ellipse（表示椭圆形），渐变的大小是 farthest-corner（表示到最远的角落）。 shape: 设定色彩放射形状，如圆形(circle)、椭圆(ellipse) length: 设定渐变大小，可以通过数值或以下关键词设定渐变大小 closest-side | farthest-side | closest-corner | farthest-corner： position: 设定渐变中心，可以使用数值、％或以下关键词设定渐变中心 top | right | bottom | left3. 重复线性渐变 repeating-linear-gardient()通过设定其实色彩驻停点与结束色彩驻停点的长度来决定重复的次数。当长度为20%时，渐变重复5次。4. 重复放射渐变 repeating-radial-gardient()通过设定其实色彩驻停点与结束色彩驻停点的长度来决定重复的次数。当长度为20%时，渐变重复5次。 "},{"title":"HTML5笔记","date":"2020-11-01T04:40:03.000Z","url":"/2020/11/01/HTML5%E7%AC%94%E8%AE%B0/","tags":[["前端","/tags/%E5%89%8D%E7%AB%AF/"],["HTML","/tags/HTML/"]],"categories":[["前端","/categories/%E5%89%8D%E7%AB%AF/"]],"content":"一、HTML5的基本元素1. &lt;meta&gt; 元素属性 charset: HTML编码方式 http-equiv: refresh: 设定几秒后重新读取页面，或重定向至另一个页面 2. &lt;pre&gt; 元素其内容与编辑html文件所看到的格式相同，即可以保留原始文件样式 3. &lt;section&gt; 元素用于在文件中标记某一区域，是html的区块级元素，这种层级元素内的标题会被降一级输出，如h1-&gt;h2 4. 引用 &lt;cite&gt;/&lt;q&gt;/&lt;blockquote&gt; 元素 &lt;cite&gt;: 内容以斜体方式显示，用于引用源标题 &lt;q&gt;: 内容前后自动加上引号，用于引用短篇文章或段落元素 &lt;blockquote&gt;: 内容有缩排效果，用于引用长篇文章5. 底纹 &lt;mark&gt; 元素内容会高亮显示6. 小型字 &lt;small&gt; 元素用于批注信息，如脚注，尾注等7. &lt;kbd&gt;/&lt;samp&gt;/&lt;var&gt;/&lt;code&gt; 元素 &lt;kbd&gt;: 用于显示键盘或语音输入的内容 &lt;samp&gt;: 用于显示计算机程序结果 &lt;var&gt;: 用于显示变量 &lt;code&gt;: 用于显示代码8. &lt;abbr&gt; 元素用于定义缩写9. &lt;dfn&gt; 元素用于定义用语，结果以斜体输出8. &lt;sup&gt;/&lt;sub&gt; 元素 &lt;sup&gt;: 上标元素 &lt;sub&gt;: 下标元素9. 常用特殊元素 描述 实体名称 编码 空格 &amp;nbsp; &amp;#160; 小于 &amp;lt; &amp;#60; 大于 &amp;gt; &amp;#62; 引号 &amp;quot; &amp;#34; 和号 &amp;amp; &amp;#38; 10. &lt;a&gt; 元素属性 download: 指定下载链接 target: 规定在何处打开目标 URL。仅在 href 属性存在时使用。_blank：新窗口打开。_parent：在父窗口中打开链接。_self：默认，当前页面跳转。_top：在当前窗体打开链接，并替换当前的整个窗体(框架页)。 同一个html中的超链接： 书签： 返回顶部： 指定基准url： 使用&lt;base&gt;元素可指定url的基准，此后其他相对的url皆以此url为基准 &lt;base&gt;元素位于&lt;head&gt;元素内，且一个&lt;head&gt;元素只能有一个&lt;base&gt;元素 二、HTML5项目列表1. 无编号项目列表 &lt;ul&gt; 元素语法： 2. 有编号项目列表 &lt;ol&gt; 元素1 语法： 2 设置起始编号为n： 3 在一组连续编号中指定某一项为n： 4 更改项目编号种类（n可以取以下值）： a: 编号是：a,b,c,… A: 编号是：A,B,C,… i: 编号是：i,ii,iii,… I: 编号是：I,II,III,… 5 设置编号递减： 3. 自定义列表 &lt;dl&gt; 元素语法： 三、HTML5表格1. 表格基本元素 &lt;table&gt;: 表格本体标记 &lt;tr&gt;: 行 &lt;td&gt;: 单元格 &lt;th&gt;: 表头 &lt;tbody&gt;: 表格本体 &lt;tfoot&gt;: 表尾 &lt;caption&gt;: 标题2. &lt;td&gt; 属性 colspan: 合并横向单元格 rowspan: 合并纵向单元格 3. 单元格列群组化 &lt;colgroup&gt;/&lt;col&gt; 元素 colgroup: 用于将单元格群组化 col: colgroup的子元素，用于定义colgroup每一列的属性 四、HTML5图片1. &lt;img&gt; 元素&lt;img&gt; 标签定义 HTML 页面中的图像。 &lt;img&gt; 标签有两个必需的属性：src 和 alt。 注释：从技术上讲，图像并不会插入 HTML 页面中，而是链接到 HTML 页面上。&lt;img&gt; 标签的作用是为被引用的图像创建占位符。 提示：通过在 &lt;a&gt; 标签中嵌套 &lt;img&gt; 标签，给图像添加到另一个文档的链接。 2. 标示文件标题 &lt;figure&gt;/&lt;figcaption&gt; 元素用于标示图片标题 3. 响应图 &lt;map&gt; 元素 五、HTML5多媒体元素1. 视频 &lt;video&gt; 元素目前，&lt;video&gt; 元素支持三种视频格式：MP4、WebM、Ogg 属性 2. 音频 &lt;audio&gt; 元素目前，&lt;audio&gt; 元素支持的3种文件格式：MP3、Wav、Ogg 属性 3. 指定多个播放文件 &lt;source&gt; 元素&lt;source&gt; 标签为媒体元素（比如 &lt;video&gt; 和 &lt;audio&gt;）定义媒体资源。 &lt;source&gt; 标签允许您规定两个视频/音频文件共浏览器根据它对媒体类型或者编解码器的支持进行选择。 属性 4. 嵌入资源文件 &lt;embed&gt; 元素&lt;embed&gt; 标签定义了一个容器，用来嵌入外部应用或者互动程序（插件）。 注意：现在已经不建议使用 &lt;embed&gt; 标签了，可以使用 &lt;img&gt;、&lt;iframe&gt;、&lt;video&gt;、&lt;audio&gt; 等标签代替。 属性 5. 嵌入对象 &lt;object&gt; 元素&lt;object&gt; 标签用于包含对象，比如图像、音频、视频、Java applets、ActiveX、PDF 以及 Flash。 属性 6. 设定嵌入对象参数 &lt;param&gt; 元素&lt;param&gt;元素允许您为插入 XHTML 文档的对象规定 run-time 设置，也就是说，此标签可为包含它的 &lt;object&gt; 或者 &lt;applet&gt; 标签提供参数。 属性 7. 嵌入浮动框架 &lt;iframe&gt; 元素&lt;iframe&gt; 标签规定一个内联框架。 一个内联框架被用来在当前 HTML 文档中嵌入另一个文档。 提示： 1.可以把需要的文本放置在 &lt;iframe&gt; 和 &lt;/iframe&gt; 之间，这样就可以应对不支持 &lt;iframe&gt; 的浏览器。 2.可以使用 CSS 为 &lt;iframe&gt; （包括滚动条）定义样式。 属性 六、HTML5表单交互1. &lt;form&gt; 元素语法： 属性 2. &lt;input&gt; 元素输入字段可通过多种方式改变，取决于 type 属性。 属性 3. &lt;textarea&gt; 元素&lt;textarea&gt; 标签定义一个多行的文本输入控件。 文本区域中可容纳无限数量的文本，其中的文本的默认字体是等宽字体（通常是 Courier）。 可以通过 cols 和 rows 属性来规定 textarea 的尺寸大小，不过更好的办法是使用 CSS 的 height 和 width 属性。 属性 4. 关联标记 &lt;label&gt; 元素label 元素不会向用户呈现任何特殊效果。不过，它为鼠标用户改进了可用性。如果您在 label 元素内点击文本，就会触发此控件。即当用户选择该标签时，浏览器就会自动将焦点转到和标签相关的表单控件上。 &lt;label&gt; 标签的 for 属性应当与相关元素的 id 属性相同。 语法： 属性 5. 进度条 &lt;progress&gt; 元素&lt;progress&gt; 标签定义运行中的任务进度（进程） 属性 6. 仪表值 &lt;meter&gt; 元素&lt;meter&gt; 标签定义度量衡。仅用于已知最大和最小值的度量。 比如：磁盘使用情况，查询结果的相关性等。 属性 7. 下拉框 &lt;select&gt;/&lt;option&gt;/&lt;optgroup&gt; 元素&lt;select&gt; 元素用来创建下拉列表。 &lt;select&gt; 元素中的 &lt;option&gt; 标签定义了列表中的可用选项。 &lt;select&gt; 属性&lt;option&gt; 属性&lt;optgroup&gt; 标签经常用于把相关的选项组合在一起。 如果你有很多的选项组合, 你可以使用&lt;optgroup&gt; 标签能够很简单的将相关选项组合在一起。 &lt;optgroup&gt; 属性 8. 文本框候补选项 &lt;datalist&gt;/&lt;option&gt; 元素&lt;datalist&gt; 标签规定了 &lt;input&gt; 元素可能的选项列表。 &lt;datalist&gt; 标签被用来在为 &lt;input&gt; 元素提供”自动完成”的特性。用户能看到一个下拉列表，里边的选项是预先定义好的，将作为用户的输入数据。 请使用 &lt;input&gt; 元素的 list 属性来绑定 &lt;datalist&gt; 元素。 属性 id: 其内容应该和input元素的list属性值相同，以此建立关联。 9. 表单组件群组化 &lt;fieldset&gt;/&lt;legend&gt; 元素&lt;fieldset&gt; 标签可以将表单内的相关元素分组。 &lt;fieldset&gt; 标签会在相关表单元素周围绘制边框。 &lt;legend&gt; 元素为 &lt;fieldset&gt;元素定义标题。 属性 10. 加密密钥 &lt;keygen&gt; 元素&lt;keygen&gt; 标签规定用于表单的密钥对生成器字段。 当提交表单时，私钥存储在本地，公钥发送到服务器。 属性 七、HTML5功能总结1. 全局属性 2. 事件属性 3. &lt;script&gt; 元素&lt;script&gt; 标签用于定义客户端脚本，比如 JavaScript。 &lt;script&gt; 元素既可包含脚本语句，也可以通过 “src” 属性指向外部脚本文件。 JavaScript 通常用于图像操作、表单验证以及动态内容更改。 4. 一般区块&lt;div&gt; 元素&lt;div&gt; 标签定义 HTML 文档中的一个分隔区块或者一个区域部分。 &lt;div&gt; 标签常用于组合块级元素，以便通过 CSS 来对这些元素进行格式化。 5. 一般范围&lt;span&gt; 元素&lt;span&gt; 用于对文档中的行内元素进行组合。 &lt;span&gt; 标签没有固定的格式表现。当对它应用样式时，它才会产生视觉上的变化。如果不对 &lt;span&gt; 应用样式，那么 &lt;span&gt; 元素中的文本与其他文本不会任何视觉上的差异。 &lt;span&gt; 标签提供了一种将文本的一部分或者文档的一部分独立出来的方式。 6. 区块层级与行内层级 **区块层级(block)**：在新的一行放置，常见元素：&lt;div&gt; &lt;hn&gt; &lt;p&gt; &lt;pre&gt; **行内层级(inline)**：在同一行放置，常见元素：&lt;a&gt; &lt;img&gt; &lt;span&gt;7. 网页布局实例： "}]